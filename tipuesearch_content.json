{"pages":[{"text":"\u521be \uff0c\u82b1\u540d\u7693\u79b9\uff0c\u539f\u540d\u5f20\u658c\uff0c\u8ba1\u7b97\u673a\u4e13\u4e1a\uff0c\u4ece\u4e8b\u8fd0\u7ef4\u3001\u5f00\u53d1\u5de5\u4f5c\uff0c\u4e1a\u4f59\u8bb2\u5e08 2009\u5e74 \u4ece\u4e8blinux\u8fd0\u7ef4\u5de5\u4f5c 2010\u5e74 \u7ee7\u7eed\u8fd0\u7ef4,\u517c\u804c\u4e1a\u4f59\u6280\u672f\u8bb2\u5e08 2011\u5e74 \u7ee7\u7eed\u8fd0\u7ef4 2012\u5e74 \u5f00\u59cbDevOps 2013\u5e74 \u6b63\u5f0f\u6210\u4e3apython\u7a0b\u5e8f\u733f 2014\u5e74 \u4e13\u6ce8python web\u5f00\u53d1\u548capp\u540e\u7aef\u5f00\u53d1","tags":"about","loc":"http://opslinux.com/pages/about.html","title":"about"},{"text":"\u6653\u7684\u535a\u5ba2 \u5cf0\u4e91\u5c31\u5979\u4e86 \u5cf0\u4e91\u5c31\u5979\u4e86-51cto \u707f\u54e5\u7684Blog the5fire\u7684\u6280\u672f\u535a\u5ba2 FURION'S BLOG-\u601d\u806a \u9648\u674e\u7cae \u6d41\u6c34\u7406\u9c7c-\u674e\u723d \u6211\u53cb\u535a\u5ba2","tags":"pages","loc":"http://opslinux.com/pages/links.html","title":"links"},{"text":"python\u73b0\u5728\u53d8\u5f97\u8d8a\u6765\u8d8a\u6d41\u884c\uff0c\u6240\u4ee5\u6709\u66f4\u591a\u670b\u53cb\u60f3\u5b66\u4e60python\uff0c\u6709\u4e9b\u670b\u53cb\u6ca1\u6709\u7f16\u7a0b\u57fa\u7840\uff0c\u4e70\u4e86\u4e66\u770b\u4e0d\u8fdb\u53bb\u4e0d\u77e5\u9053\u5982\u4f55\u4e0b\u624b\uff0c\u62a5\u4e86\u57f9\u8bad\u73ed\uff0c\u8bb2\u5e08\u826f\u83a0\u4e0d\u9f50\uff0c\u53c8\u6015\u88ab\u5751\uff0c\u6240\u4ee5\u5f88\u56f0\u60d1\u3002\u8bb8\u591a\u4eba\u6765\u627e\u6211\u4ea4\u6d41\uff0c\u6240\u4ee5\u6211\u5c31\u5f55\u5236\u4e00\u5957\u5feb\u901f\u5165\u95e8\u7684\u8fed\u4ee3\u5b66\u4e60\u65b9\u6cd5\uff0c\u8ba9\u5927\u5bb6\u5feb\u901f\u7684\u5b66\u4e60\uff0c\u628a\u7cbe\u529b\u7528\u5728\u5927\u5bb6\u559c\u7231\u7684\u9879\u76ee\u4e0a\u3002","tags":"python\u5f00\u53d1\u5b9e\u8df5","loc":"http://opslinux.com/python_viode_0.html","title":"python\u89c6\u9891\u52a8\u5458"},{"text":"\u6700\u8fd1\u670d\u52a1\u5668\u5728\u7ebf\u4e0a\u505a\u6d4b\u8bd5\uff0c\u6ca1\u7528supervisord\u7ba1\u7406\uff0c\u6709\u65f6\u5019\u5fc5\u987b\u9700\u8981\u624b\u52a8\u6765\u56de\u5207\u6362\uff0cdev\u548ctest\u542f\u52a8\u7684\u65b9\u5f0f\u4e5f\u4e0d\u540c\uff0c\u7d22\u6027\u7528shell\u5199\u4e2a\u6bd4\u8f83low\u7684\u811a\u672c\u641e\u5b9a\u4e8b\u60c5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #!/bin/bash case $1 in dev) . ~/py2/bin/activate #\u4f7f\u7528 virtualenv python manage.py runserver store.dev.service.cmos.net:8080 ;; test) . ~/py2/bin/activate python manage.py runserver store.test.service.cmos.net:8080 ;; *) echo \"Usage: $0 [dev|test]\" exit 1 ;; esac exit 0 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"Django","loc":"http://opslinux.com/Django_shell.html","title":"Django\u542f\u52a8shell\u811a\u672c"},{"text":"\u4eca\u5929\u770b\u5230\u6709\u670b\u53cb\u5728\u7528ipython\uff0c\u6211\u4e5f\u597d\u4e45\u6ca1\u7528\u4e86\uff0c\u7d22\u6027\u88c5\u4e00\u4e0b \u73af\u5883\u4e3aMacOS Python 2.7.5 1 pip install readline ipython \u5b89\u88c5\u5b8c\u6210\uff0c\u8f93\u5165ipython\u8fdb\u5165\uff1a","tags":"python","loc":"http://opslinux.com/install_ipython.html","title":"\u5b89\u88c5ipython"},{"text":"\u5982\u679c\u4f60\u6700\u8fd1\u66f4\u65b0\u4e86 Git\uff0c\u4f60\u53ef\u80fd\u4f1a\u5728\u6267\u884c git push \u65f6\u770b\u5230\u5982\u4e0b\u6d88\u606f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 warning: push.default is unset; its implicit value is changing in Git 2.0 from 'matching' to 'simple'. To squelch this message and maintain the current behavior after the default changes, use: git config --global push.default matching To squelch this message and adopt the new behavior now, use: git config --global push.default simple Matching \u2018matching' \u53c2\u6570\u662f Git 1.x \u7684\u9ed8\u8ba4\u884c\u4e3a\uff0c\u5176\u610f\u662f\u5982\u679c\u4f60\u6267\u884c git push \u4f46\u6ca1\u6709\u6307\u5b9a\u5206\u652f\uff0c\u5b83\u5c06 push \u6240\u6709\u4f60\u672c\u5730\u7684\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\u5bf9\u5e94\u5339\u914d\u7684\u5206\u652f\u3002 Simple \u800c Git 2.x \u9ed8\u8ba4\u7684\u662f simple\uff0c\u610f\u5473\u7740\u6267\u884c git push \u6ca1\u6709\u6307\u5b9a\u5206\u652f\u65f6\uff0c\u53ea\u6709\u5f53\u524d\u5206\u652f\u4f1a\u88ab push \u5230\u4f60\u4f7f\u7528 git pull \u83b7\u53d6\u7684\u4ee3\u7801\u3002 \u4fee\u6539\u9ed8\u8ba4\u8bbe\u7f6e \u4ece\u4e0a\u8ff0\u6d88\u606f\u63d0\u793a\u4e2d\u7684\u89e3\u91ca\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u5168\u5c40\u914d\u7f6e\uff0c\u4f7f\u4e4b\u4e0d\u4f1a\u6bcf\u6b21 push \u7684\u65f6\u5019\u90fd\u8fdb\u884c\u63d0\u793a\u3002\u5bf9\u4e8e matching \u8f93\u5165\u5982\u4e0b\u547d\u4ee4\u5373\u53ef\uff1a 1 git config --global push.default matching \u800c\u5bf9\u4e8e simple \uff0c\u8bf7\u8f93\u5165\uff1a 1 git config --global push.default simple","tags":"git","loc":"http://opslinux.com/Git-matching-simple.html","title":"Git push \u4e2d\u7684 Matching\u548cSimple"},{"text":"\u4f7f\u7528virtualenv sudo pip install virtualenv \u5efa\u8bae\u5927\u5bb6\u90fd\u4f7f\u7528python2.7\u4ee5\u4e0a\u7248\u672c \u5b89\u88c5flask pip install flask","tags":"flask","loc":"http://opslinux.com/flask_blog.html","title":"flask\u5f00\u53d1\u5b9e\u8df5\uff08\u4e00\uff09"},{"text":"mechanize\u662f\u975e\u5e38\u5408\u9002\u7684\u6a21\u62df\u6d4f\u89c8\u5668\u7684\u6a21\u5757\uff0c\u5b83\u7684\u7279\u70b9\u4e3b\u8981\u6709\uff1a 1 http,https\u534f\u8bae\u7b49\u3002 2 \u7b80\u5355\u7684HTML\u8868\u5355\u586b\u5199\u3002 3 \u6d4f\u89c8\u5668\u5386\u53f2\u8bb0\u5f55\u548c\u91cd\u8f7d\u3002 4 Referer\u7684HTTP\u5934\u7684\u6b63\u786e\u6dfb\u52a0\uff08\u53ef\u9009\uff09\u3002 5 \u81ea\u52a8\u9075\u5b88robots.txt\u7684\u3002 6 \u81ea\u52a8\u5904\u7406HTTP-EQUIV\u548c\u5237\u65b0\u3002 \u6240\u4ee5\u4f60\u53ef\u4ee5\u7528mechanize\u6765\u5b8c\u6210\u4e00\u4e9b\u81ea\u52a8\u5316\u6d4f\u89c8\u5668\u60f3\u8981\u505a\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u81ea\u52a8\u767b\u5f55\u8868\u5355\uff0c\u81ea\u52a8\u586b\u5199\u8868\u5355\u7b49 \u786e\u4fdd\u5df2\u7ecf\u5b89\u88c5\uff1apip install mechanize 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #!/usr/bin/python import mechanize #\u5f15\u5165mechanize \u9700\u8981pip\u5b89\u88c5 import cookielib #\u5f15\u5165cookielib \u6765\u505acookie url = 'http://127.0.0.1:8080/login' username = 'zhangbin' password = 'zhangbin' def login (): br = mechanize . Browser () cj = cookielib . LWPCookieJar () br . set_cookiejar ( cj ) #\u5173\u8054cookies #\u8bbe\u7f6e\u4e00\u4e9b\u53c2\u6570\uff0c\u56e0\u4e3a\u662f\u6a21\u62df\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u6240\u4ee5\u8981\u652f\u6301\u5ba2\u6237\u7aef\u7684\u4e00\u4e9b\u5e38\u7528\u529f\u80fd br . set_handle_equiv ( True ) br . set_handle_gzip ( True ) br . set_handle_redirect ( True ) br . set_handle_referer ( True ) br . set_handle_robots ( False ) br . set_handle_refresh ( mechanize . _http . HTTPRefreshProcessor (), max_time = 1 ) br . addheaders = [( 'User-agent' , 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.1.11) Gecko/20100701 Firefox/3.5.11' )] #\u6a21\u62df\u6d4f\u89c8\u5668\u5934 # br.set_debug_http(True) #debug # br.set_debug_responses(True) #debug br . open ( url ) #\u6253\u5f00\u8fde\u63a5 br . select_form ( nr = 0 ) #\u9009\u62e9\u7b2c\u4e00\u4e2aform br . form [ 'email' ] = username #\u5199\u5165\u7528\u6237\u540d br . form [ 'password' ] = password #\u5199\u5165\u5bc6\u7801 br . submit () #\u63d0\u4ea4 print br . response () . read () #\u6253\u5370\u767b\u5f55\u540e\u5185\u5bb9 if __name__ == '__main__' : login ()","tags":"python","loc":"http://opslinux.com/pythonmechanize.html","title":"python\u4f7f\u7528mechanize\u5b9e\u73b0\u767b\u9646"},{"text":"Django\uff0c\u662f\u4e2a\u4e0d\u9519\u7684\u6846\u67b6\uff0c\u975e\u5e38\u5168\uff0c\u5185\u7f6e\u4e86\u7528\u6237\u7cfb\u7edf\uff0c\u54b1\u4eec\u7a0d\u5fae\u4fee\u6539\u5c31\u53ef\u4ee5\u5b9e\u73b0\u53d1\u9001\u91cd\u7f6e\u5bc6\u7801\u90ae\u4ef6\u3002 url.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 from django.contrib.auth import views as auth_views urlpatterns = patterns ( '' , url ( r'&#94;forgot-password/$' , views . forgot_password , name = \"forgot-password\" ), url ( r'&#94;password/change/$' , auth_views . password_change , name = 'password_change' ), url ( r'&#94;password/change/done/$' , auth_views . password_change_done , name = 'password_change_done' ), url ( r'&#94;resetpassword/$' , auth_views . password_reset , name = 'password_reset' ), url ( r'&#94;resetpassword/passwordsent/$' , auth_views . password_reset_done , name = 'password_reset_done' ), url ( r'&#94;reset/done/$' , auth_views . password_reset_complete , name = 'password_reset_complete' ), url ( r'&#94;reset/(?P<uidb64>[0-9A-Za-z_\\-]+)/(?P<token>.+)/$' , auth_views . password_reset_confirm , name = 'password_reset_confirm' ), ) templates\u8bbe\u7f6e \u5728 django/contrib/auth/templates/registration \u4e2dcopy\u5982\u4e0b\u6587\u4ef6\u5230\u81ea\u5df1\u7684templates\u76ee\u5f55\u4e0b\u7684registration\u4e2d\uff1a password_reset_subject.txt \u5728 django/contrib/admin/templates/registration \u4e2dcopy\u5982\u4e0b\u6587\u4ef6\u5230\u81ea\u5df1\u7684templates\u76ee\u5f55\u4e0b\u7684registration\u4e2d\uff1a logged_out.html password_change_done.html password_change_form.html password_reset_complete.html #\u4fee\u6539\u5bc6\u7801\u5b8c\u6210\u7684\u6587\u4ef6 password_reset_confirm.html password_reset_done.html password_reset_email.html #\u53d1email\u7684\u6587\u4ef6 password_reset_form.html \u53ef\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u8fdb\u884c\u5b9a\u4e49\u6211\u5728\u8fd9\u91cc\u9762\uff0c\u5c31\u628alogged_out.html\u6587\u4ef6\u5220\u9664\u4e86\uff0c\u52a0\u5165\u4e86\u81ea\u5df1\u5199\u7684login.html\uff0c\u7136\u540e\u5c06\u6240\u6709\u6587\u4ef6\u4e2d\u7684{% extends \"admin/base_site.html\" %} \u6539\u4e3a{% extends \"base.html\" %} \u8fd9\u6837\u505a\u5b8c\u8fd8\u662f\u4e0d\u80fd\u7528\u7684\uff0c\u56e0\u4e3a\u9700\u8981base.html\u6587\u4ef6: 1 2 3 4 5 6 7 8 <html> <head> <title> {% block title %}{% endblock title %} </title> </head> <body> {% block content %}{% endblock content %} </body> </html> \u6d4b\u8bd5 \u70b9\u51fb\u5fd8\u8bb0\u5bc6\u7801\uff1a \u8f93\u5165\u81ea\u5df1\u7684\u90ae\u7bb1\u5730\u5740\u3002 \u4e0d\u4e00\u4f1a\u5c31\u4f1a\u6536\u5230\u90ae\u4ef6\uff1a \u5185\u5bb9\u4e3a\uff1a \u60f3\u4fee\u6539\u90ae\u4ef6\u5185\u5bb9\u53ef\u4ee5\u4fee\u6539templates/registration/password_reset_email.html\u6587\u4ef6\u3002 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"Django","loc":"http://opslinux.com/django_password_reset-.html","title":"Django\u5b9e\u73b0\u53d1\u9001\u90ae\u4ef6\u91cd\u7f6e\u7528\u6237\u5bc6\u7801"},{"text":"\u7b97\u6cd5\u5b9e\u9645\u90a3\u590d\u6742\u5ea6\u5b9a\u4e49 \u63a8\u5bfc\u5927O\u9636 1.\u7528\u5e38\u65701\u53d6\u4ee3\u8fd0\u884c\u65f6\u95f4\u4e2d\u7684\u6240\u6709\u52a0\u6cd5\u5e38\u6570\u3002 2.\u5728\u4fee\u6539\u540e\u5f97\u8fd0\u884c\u6b21\u6570\u51fd\u6570\u4e2d\uff0c\u53ea\u4fdd\u7559\u6700\u9ad8\u9636\u9879 \u3002 3.\u5982\u679c\u6700\u9ad8\u9636\u9879\u5b58\u5728\u4e14\u4e0d\u662f1\uff0c\u5219\u53bb\u9664\u4e0e\u8fd9\u4e2a\u9879\u76f8\u4e58\u7684\u5e38\u6570\u3002 \u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f\u5927O\u9636 \u5e38\u6570\u9636 1 2 3 int sum = 0 , n = 100 ; /* \u6267\u884c\u4e00\u6b21 */ sum = ( 1 + n ) * n / 2 ; /* \u6267\u884c\u4e00\u6b21 */ printf ( \"%d\" , sum ); /* \u6267\u884c\u4e00\u6b21 */ \u8fd9\u4e2a\u7b97\u6cd5\u8fd0\u884c\u6b21\u6570\u51fd\u6570\u662ff(n)=3.\u6839\u636e\u6211\u4eec\u63a8\u5230\u5927O\u9636\u7684\u65b9\u6cd5\uff0c\u7b2c\u4e00\u6b65\u5c31\u662f\u628a\u5e38\u6570\u98793\u6539\u4e3a1\u3002\u5728\u4fdd\u7559\u6700\u9ad8\u9636\u9879\u65f6\u53d1\u73b0\uff0c\u5b83\u6839\u672c\u6ca1\u6709\u6700\u9ad8\u9636\u9879\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\u3002 \u7ebf\u6027\u9636 \u5bf9\u6570\u9636 \u5e73\u65b9\u9636","tags":"\u7b97\u6cd5","loc":"http://opslinux.com/Time_Complexity.html","title":"\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6"},{"text":"\u5728web\u9879\u76ee\u4e2d\uff0cajax\u8fd0\u7528\u975e\u5e38\u9891\u7e41\uff0c\u4eca\u5929\u5c31\u7ed9\u5927\u5bb6\u5c55\u793a\u4e0bDjango ajax Post\u7684\u4f7f\u7528\u65b9\u6cd5 templates \u6a21\u677f index.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <html> <header></header> <body> <p> name: <input type= \"text\" name= \"nickname\" /></p> <input class= \"name_submit\" type= \"submit\" value= \"Submit\" /> <div class= \"name_value\" ></div> </body> <script src= \"/static/js/jquery.js\" ></script> <script type= \"text/javascript\" > $ ( \".name_submit\" ). click ( function (){ var nickname = $ ( \"input[name='nickname']\" ). val (); $ . ajax ({ url : \"/nickname\" , type : \"post\" , data : { \"nickname\" : nickname }, dataType : \"json\" , success : function ( data ){ $ ( \".name_value\" ). text ( \"\" ) $ ( \".name_value\" ). append ( \"\u540d\u5b57\u4e3a:\" + data ) } }); // Ajax End }); </script> </html> \u663e\u793a\u5982\u4e0b\uff1a \u5f53\u70b9\u51fb\u63d0\u4ea4\u6309\u94ae\u65f6\uff0c\u5c31\u6267\u884cajax\uff0c\u628a\u83b7\u53d6\u7684nickname\u4f20\u9012\u5230/nickname url\u4e2d\u3002 url 1 2 3 4 5 6 7 8 9 10 11 12 13 from django.conf.urls import patterns , include , url from django.contrib import admin from views import index , nickname admin . autodiscover () urlpatterns = patterns ( '' , # Examples: url ( r'&#94;$' , index ), url ( r'&#94;nickname$' , nickname ), url ( r'&#94;admin/' , include ( admin . site . urls )), ) \u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230/nickname URL\u662fviews\u6587\u4ef6\u4e2d\u7684nickname\u51fd\u6570 views 1 2 3 4 5 6 7 8 9 10 11 12 #coding=utf-8 from django.shortcuts import render , render_to_response from django.http import HttpResponseRedirect , HttpResponse from django.template import Template , Context def index ( request ): if request . method == 'GET' : return render_to_response ( \"index.html\" ) def nickname ( request ): if request . method == 'POST' : #\u5f53request\u4e3aPOST\u7684\u65f6\u5019 nickname = request . POST . get ( 'nickname' , '' ) #\u83b7\u53d6ajax POST\u7684nickname\u503c return HttpResponse ( nickname ) #\u4e3a\u4e86\u65b9\u4fbf\u663e\u793a\uff0c\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u663e\u793anickname nickname\u51fd\u6570 \u5f53\u65f6POST\u7684\u65f6\u5019\uff0c\u83b7\u53d6nickname\u503c\uff0c\u7136\u540e\u4e3a\u4e86\u65b9\u4fbf\u663e\u793a\u5c31\u76f4\u63a5\u4f7f\u7528return HttpResponse(nickname) \u76f4\u63a5\u5c55\u793a\u51fa\u6765nickname\u503c if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"Django","loc":"http://opslinux.com/Django_ajax_post-.html","title":"Django ajax post"},{"text":"\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u5236\u4f5c\u4e00\u4e9b\u56fe\u8868\uff0c\u5355\u72ec\u4f7f\u7528python\u53ef\u4ee5\u5236\u4f5c\u51fa\u4f46\u662f\u4e0d\u662f\u7279\u522b\u597d\u770b\uff0c\u4eca\u5929\u6211\u4eec\u5c31\u7528Django\u548chighcharts\u795e\u5668\u6765\u505a\u51fa\u597d\u770b\u7684\u56fe\u6807\uff0c\u5982\u60f3\u8981\u8be6\u7ec6\u4e86\u89e3highcharts\u8bf7\u5173\u6ce8\u5982\u4e0b\u7f51\u7ad9\uff1a highcharts\u5b98\u7f51 highcharts\u4e2d\u6587\u7f51 \u524d\u7aef\u51c6\u5907: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 <html> <head></head> <body> <div id= \"container\" style= \"height: 300px\" ></div> </body> <script type= \"text/javascript\" > $ ( function () { $ ( '#container' ). highcharts ({ chart : { type : 'column' }, title : { text : 'ip\u7edf\u8ba1' }, xAxis : { categories : {{ ip_time }} }, //ip_time\u6570\u636e\u4e3a\uff1a[20140501, 20140502, 20140503, 20140504, 20140505] yAxis : { min : 0 , title : { text : 'ip\u6570\u91cf (ip)' } }, plotOptions : { column : { pointPadding : 0.2 , borderWidth : 0 } }, series : [{ name : 'ip' , data : {{ ip_conut }} //ip_conut\u6570\u636e\u4e3a\uff1a[853, 821, 829, 1048, 1014] }] }); }); </script> </html> \u540e\u7aefviews\u5b9e\u73b0\uff1a 1 2 3 4 5 def ip ( request ): if request . method == 'GET' : ip_time = [ 20140501 , 20140502 , 20140503 , 20140504 , 20140505 ] ip_conut = [ 853 , 821 , 829 , 1048 , 1014 ] return render_to_response ( \"app_detail.html\" , RequestContext ( request , { 'ip_time' : ip_time , 'ip_conut' : ip_conut })) \u8fd9\u91cc\u7684\u6570\u636e\u53ea\u662f\u4e2a\u4f8b\u5b50\uff0c\u66f4\u76f4\u89c2\u7684\u5c55\u793a\u51fa\u6548\u679c\uff0c\u771f\u6b63\u9879\u76ee\u4e2d\u53ef\u80fd\u9700\u8981\u4f60\u5728\u6570\u636e\u5e93\u4e2d\u53d6\u51fa\u6570\u636e\uff0c\u81ea\u5df1\u6298\u817e\u6210list\uff0c\u6211\u4eec\u770b\u4e0b\u6548\u679c\uff1a if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"python","loc":"http://opslinux.com/python_and_highcharts.html","title":"python\u548chighcharts\u5236\u4f5c\u56fe\u8868"},{"text":"Python\u4e2d\uff0c\u7528\u4e8e\u52a0\u5bc6\u7684md5\u65b9\u6cd5\u5728hashlib\u6a21\u5757\u4e2d\uff0c\u6587\u4ef6\u7684MD5\u6821\u9a8c\u7801\u662f\u6839\u636e\u6587\u4ef6\u7684\u5185\u5bb9\u751f\u6210\u7684\u4fe1\u606f\u6458\u8981\uff0c\u65b9\u6cd5\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 from hashlib import md5 def md5_file ( name ): m = md5 () a_file = open ( name , 'rb' ) #\u4f7f\u7528\u4e8c\u8fdb\u5236\u683c\u5f0f\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 m . update ( a_file . read ()) a_file . close () return m . hexdigest () if __main__ == '__init__' : print md5_file ( '/home/ce/1.txt' )","tags":"python","loc":"http://opslinux.com/python_md5-.html","title":"python\u8ba1\u7b97\u6587\u4ef6md5"},{"text":"tornado\u5c5e\u4e8e\u8f7b\u91cf\u7ea7\uff0c\u5f02\u6b65\uff0c\u9ad8\u5e76\u53d1\u7684\u4ee3\u540d\u8bcd\u4e86\uff0c\u867d\u7136\u5f00\u53d1\u7f51\u7ad9\u7684\u901f\u5ea6\u6bd4\u8f83\u6162\uff0c\u4f46\u662f\u5927\u591a\u6570\u540c\u5b66\u5f00\u53d1\u540e\u7aef\u670d\u52a1\uff0c\u8fd8\u90fd\u662f\u559c\u6b22\u4f7f\u7528tornado\uff0c\u4eca\u5929\u7ed9\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\uff0ctornado\u4e2d\u81ea\u5df1\u505asession\u65f6\uff0c\u5199\u88c5\u9970\u5668\u7684\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #coding=utf-8 import models from tornado.web import HTTPError def check_login ( func ): def _wrapper ( self , * args , ** kwargs ): session_id = self . request . headers . get ( 'Session_id' , None ) user_id = self . request . headers . get ( 'User_id' , None ) session_data = models . session . query ( models . Session ) . filter_by ( user_id = user_id ) . first () if session_id : ret = func ( self , * args , ** kwargs ) if session_data . session_id == session_id : return ret else : raise HTTPError ( 403 ) else : raise HTTPError ( 403 ) return _wrapper","tags":"tornado","loc":"http://opslinux.com/tornado-session-.html","title":"tornado session\u88c5\u9970\u5668"},{"text":"\u6700\u8fd1\u6362\u4e86\u65b0\u516c\u53f8\uff0c\u516c\u53f8\u65b0\u9879\u76ee\u8981\u7528Django\uff0c\u56e0\u4e3a\u73b0\u5728\u7684\u9886\u5bfc\u5bf9Django\u6bd4\u8f83\u719f\u6089\uff0c\u5bf9\u4e8e\u6211\u8fd9\u79cd\u8fd0\u7ef4\u51fa\u8eab\uff0c\u5bf9\u6027\u80fd\u6709\u7740\u8981\u6c42\u7684\u4eba\u4e0d\u80fd\u7528tornado\u8fd9\u79cd\u725b\u903c\u6846\u67b6\uff0c\u5fc3\u91cc\u662f\u65e0\u9650\u7684\u60b2\u4f24\u554a\u3002\u6ca1\u529e\u6cd5\u65e5\u5b50\u8fd8\u5f97\u8fc7\u554a\uff0c\u6240\u4ee5\u8fdb\u5165\u53ef\u7e41\u5fd9\u7684\u5f00\u53d1\u671f\uff0c\u8fd9\u4e00\u7528\u4e0d\u8981\u7d27\uff0c\u8fd8\u7528\u51fa\u4e86\u611f\u60c5\uff0c\u53d1\u73b0Django\u8fd8\u591a\u5185\u7f6e\u7684app\u642d\u5efa\u7f51\u7ad9\u901f\u5ea6\u8fd8\u771f\u5feb\uff0c\u63a5\u4e0b\u6765\u5c31\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e0b\u4ed6\u7684\u7528\u6237\u7cfb\u7edf Django\u7248\u672c\uff1a1.6.2 Django\u7528\u6237\u7cfb\u7edf Django\u81ea\u5e26\u4e86\u7528\u6237\u7cfb\u7edf\uff0c\u91cc\u9762\u5305\u542b\u4e86\u8ba4\u8bc1\u7cfb\u7edf\uff0c\u975e\u5e38\u597d\u7528\uff0c\u53ef\u4ee5\u514d\u53bb\u81ea\u5df1\u9020\u8f6e\u5b50\uff0c\u4f46\u662f\u7531\u4e8eDjango\u5185\u90e8\u7684\u7528\u6237\u7cfb\u7edf\u53ef\u7528\u5b57\u6bb5\u53ea\u6709firstname\uff0clastname\uff0cemail\u7b49\u51e0\u4e2a\u57fa\u7840\u7684\u5b57\u6bb5\uff0c\u5982\u679c\u8981\u5b9e\u73b0\u6709\u4e2d\u56fd\u7279\u8272\u7684\u597dweb\u5fc5\u987b\u9700\u8981\u8fdb\u884c\u6269\u5c55\uff0c\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u7684\u7814\u7a76\uff0c\u7ec8\u4e8e\u641e\u5b9a\u3002 \u81ea\u5b9a\u4e49\u7528\u6237\u7cfb\u7edf \u73b0\u5728\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u5efa\u7acb\u4e00\u4e2aapp\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u76ee\u5f55\uff0c\u91cc\u9762\u8981\u6709 __init__.py \u6587\u4ef6 \u7136\u540e\u6839\u636e\u5b98\u65b9\u6587\u6863\u7684\u8981\u6c42\u521b\u5efa\u5e76\u5199\u5165models.py\u6587\u4ef6\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 #! /usr/bin/env python #coding=utf-8 from django.db import models from django.contrib.auth.models import ( BaseUserManager , AbstractBaseUser , PermissionsMixin ) class UserManager ( BaseUserManager ): def create_user ( self , email , username , telephone , password = None ): \"\"\" Creates and saves a User with the given email, date of birth and password. \"\"\" if not email : raise ValueError ( 'Users must have an email address' ) user = self . model ( email = self . normalize_email ( email ), username = username , telephone = telephone , ) user . set_password ( password ) user . save ( using = self . _db ) return user def create_superuser ( self , email , username , password , telephone = \"\" ): \"\"\" Creates and saves a superuser with the given email, username and password. \"\"\" user = self . create_user ( email = email , username = username , password = password , telephone = telephone ) user . is_admin = True user . save ( using = self . _db ) return user class User ( AbstractBaseUser , PermissionsMixin ): #\u6ce8\u610f\uff1a\u4e0d\u7ee7\u627fPermissionsMixin\u7c7b\uff0c\u662f\u65e0\u6cd5\u5b9e\u73b0\u4f7f\u7528Django Group\u529f\u80fd\u7684\uff0c\u672c\u4eba\u7684\u9879\u76ee\u9700\u8981\u4f7f\u7528\u6240\u4ee5\u7ee7\u627f\u8be5\u7c7b\u3002 email = models . EmailField ( verbose_name = 'email address' , max_length = 255 , unique = True , ) username = models . CharField ( max_length = 100 , unique = True , db_index = True ) # avatar = models.URLField( # blank=True # ) telephone = models . CharField ( max_length = 50 ) created_at = models . DateTimeField ( auto_now_add = True ) is_active = models . BooleanField ( default = True ) is_admin = models . BooleanField ( default = False ) objects = UserManager () USERNAME_FIELD = 'email' REQUIRED_FIELDS = [ 'username' ] def get_full_name ( self ): # The user is identified by their email address return self . email def get_short_name ( self ): # The user is identified by their email address return self . username # On Python 3: def __str__(self): def __unicode__ ( self ): return self . email def has_perm ( self , perm , obj = None ): \"Does the user have a specific permission?\" # Simplest possible answer: Yes, always return True def has_module_perms ( self , app_label ): \"Does the user have permissions to view the app `app_label`?\" # Simplest possible answer: Yes, always return True @property def is_staff ( self ): \"Is the user a member of staff?\" # Simplest possible answer: All admins are staff return self . is_admin \u7136\u540e\uff0c\u6211\u4eec\u8981\u6ce8\u518cadmin\uff0c\u518d\u521b\u5efaadmin.py\u6587\u4ef6\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 from django import forms from django.contrib import admin from django.contrib.auth.models import Group from django.contrib.auth.admin import UserAdmin from django.contrib.auth.forms import ReadOnlyPasswordHashField from app_store.account.models import User class UserCreationForm ( forms . ModelForm ): \"\"\"A form for creating new users. Includes all the required fields, plus a repeated password.\"\"\" password1 = forms . CharField ( label = 'Password' , widget = forms . PasswordInput ) password2 = forms . CharField ( label = 'Password confirmation' , widget = forms . PasswordInput ) class Meta : model = User fields = ( 'email' , 'username' , 'telephone' ) def clean_password2 ( self ): # Check that the two password entries match password1 = self . cleaned_data . get ( \"password1\" ) password2 = self . cleaned_data . get ( \"password2\" ) if password1 and password2 and password1 != password2 : raise forms . ValidationError ( \"Passwords don't match\" ) return password2 def save ( self , commit = True ): # Save the provided password in hashed format user = super ( UserCreationForm , self ) . save ( commit = False ) user . set_password ( self . cleaned_data [ \"password1\" ]) if commit : user . save () return user class UserChangeForm ( forms . ModelForm ): \"\"\"A form for updating users. Includes all the fields on the user, but replaces the password field with admin's password hash display field. \"\"\" password = ReadOnlyPasswordHashField () class Meta : model = User fields = ( 'email' , 'password' , 'username' , 'telephone' , 'is_active' , 'is_admin' ) def clean_password ( self ): # Regardless of what the user provides, return the initial value. # This is done here, rather than on the field, because the # field does not have access to the initial value return self . initial [ \"password\" ] class UserAdmin ( UserAdmin ): # The forms to add and change user instances form = UserChangeForm add_form = UserCreationForm # The fields to be used in displaying the User model. # These override the definitions on the base UserAdmin # that reference specific fields on auth.User. list_display = ( 'email' , 'username' , 'is_admin' ) list_filter = ( 'is_admin' , 'groups' ) fieldsets = ( ( None , { 'fields' : ( 'email' , 'password' )}), ( 'Personal info' , { 'fields' : ( 'username' , 'groups' )}), ( 'Permissions' , { 'fields' : ( 'is_admin' ,)}), ) # add_fieldsets is not a standard ModelAdmin attribute. UserAdmin # overrides get_fieldsets to use this attribute when creating a user. add_fieldsets = ( ( None , { 'classes' : ( 'wide' ,), 'fields' : ( 'email' , 'username' , 'password1' , 'password2' )} ), ) search_fields = ( 'email' ,) ordering = ( 'email' ,) filter_horizontal = () # Now register the new UserAdmin... admin . site . register ( User , UserAdmin ) # ... and, since we're not using Django's built-in permissions, # unregister the Group model from admin. # admin.site.unregister(Group) # admin.site.register(Group) \u5173\u4e8eadmin.site.unregister(Group)\uff0c\u5b98\u65b9\u5199\u7684\u662f\u4e0d\u6ce8\u518c\u5230admin\uff0c\u4f46\u662f\u6839\u636e\u6211\u81ea\u5df1\u7684\u9700\u6c42\uff0c\u6211\u8fd8\u662f\u9700\u8981Group\u529f\u80fd\u6765\u505a\u6743\u9650\u7684\uff0c\u6240\u4ee5\u5c31\u6ce8\u91ca\u6389\u4e86\u8be5\u884c\u3002 \u7136\u540e\u8981\u5c06\u5199\u597d\u7684 account \u52a0\u5165\u5230settings\u6587\u4ef6\u7684INSTALLED_APPS\u4e2d\uff0c\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 INSTALLED_APPS = ( 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', 'test', #\u81ea\u5df1\u7684\u5e94\u7528 'test.account', #\u5efa\u7acb\u7684account\u5e94\u7528 ) \u7136\u540e\u8bbe\u7f6e\u5728settings\u6587\u4ef6\u4e2d\u52a0\u5165\uff1a 1 AUTH_USER_MODEL = 'account.User' \u63a5\u7740\u540c\u6b65\u6570\u636e\u5e93\uff1a 1 python manager.py sync \u5e94\u7528 \u5728view\u4e2d\u76f4\u63a5\u5199\u6ce8\u518c\u65b9\u6cd5\uff0c\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from django.shortcuts import render_to_response from django.http import HttpResponse from app_store.account.models import User def register ( request ): if request . method == 'GET' : return render_to_response ( \"register.html\" ) if request . method == 'POST' : username = request . POST [ 'username' ] password = request . POST [ 'password' ] email = request . POST [ 'email' ] telephone = request . POST [ 'telephone' ] User . objects . create_user ( email = email , username = username , password = password , telephone = telephone ) html = '''<html><head><body><a href=\"/\">\u56de\u5230\u9996\u9875</a><h2>\u6ce8\u518c\u6210\u529f</h2></body></head></html>''' return HttpResponse ( html )","tags":"django","loc":"http://opslinux.com/django.html","title":"Django\u81ea\u5b9a\u4e49\u7528\u6237\u7cfb\u7edf"},{"text":"\u4eca\u5929\u6709\u8fd9\u4e48\u4e00\u4e2a\u9700\u6c42\uff0c\u8ba9\u7528python\u6765\u63a7\u5236MPlayer\uff0c\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684web\uff0c\u529f\u80fd\u6709\uff1a\u6682\u505c\uff0c\u64ad\u653e\uff0c\u5feb\u8fdb\uff0c\u5feb\u9000\uff0c\u663e\u793a\u64ad\u653elist\uff0c\u8fdb\u5ea6\uff0c\u663e\u793a\u5f53\u524d\u64ad\u653e\u6587\u4ef6\u540d\u7b49\u7b49\uff0c\u672c\u7740\u4e0d\u91cd\u590d\u9020\u8f6e\u5b50\u7684\u7406\u5ff5\uff0c\u5728Google\u4e00\u641c\uff0c\u53d1\u73b0\u4e86 mplayer.py \u8fd9\u4e2a\u795e\u5668\uff0c\u6765\u9a6c\u4e0a\u8bd5\u7528\u4e00\u4e0b\u3002 Mplayer\u5b89\u88c5 \u6211\u90fd\u7528\u7684\u662fMac\u7cfb\u7edf\uff08\u600e\u4e48\u8fd9\u4e48\u4e0d\u4f4e\u8c03\u5462\uff0c\u8fd9\u6bdb\u75c5\u4ec0\u4e48\u65f6\u5019\u80fd\u6539\uff09\uff0c\u5b89\u88c5\u4e86MplayerX\u4e00\u5230\u547d\u4ee4\u884c\u8f93\u5165\uff1amplayer\u547d\u4ee4\u53d1\u73b0\u6ca1\u547d\u4ee4\uff0c\u6211\u5c31\u614c\u4e86\uff0c\u804c\u4e1a\u75c5\u7684\u62ff\u8d77brew\u8fdb\u884c\u5b89\u88c5\uff1a 1 brew install mplayer \u6ca1\u60f3\u5230\u8fd8\u771f\u63d0\u793a\u6709\u5305\uff0c\u5b89\u88c5ing\u3002 \u5f53\u7136\uff0cUbuntu\u4e5f\u4e0d\u80fd\u5c11\uff1a apt-get install mplayer \u5e94\u8be5\u4e0d\u4f1a\u53d1\u751f\u4ec0\u4e48\u592a\u5927\u95ee\u9898 mplayer.py \u5b89\u88c5 1 pip install mplayer.py \u8fd8\u662f\u975e\u5e38\u7684\u65b9\u4fbf \u6d4b\u8bd5 \u8fdb\u5165python\u547d\u4ee4\u884c\uff0c\u6211\u4eec\u6765\u6d4b\u8bd5\uff1a (env)ce@mac:~> python Python 2.7.5 (default, Aug 25 2013, 00:04:04) [GCC 4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)] on darwin Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> >>> from mplayer import Player, CmdPrefix \u6839\u636e\u6587\u6863\uff0c\u5148\u5f15\u5165\u9700\u8981\u7684\u51fd\u6570 >>> Player.cmd_prefix = CmdPrefix.PAUSING_KEEP \u8bbe\u7f6e\u9ed8\u8ba4\u524d\u7f00\u4e3a\u6240\u6709player\u7684\u5b9e\u4f8b >>> player = Player() \u5efa\u7acb\u5b9e\u4f8b >>> player.loadfile('/path/to/file.mkv') \u5f15\u5165\u6587\u4ef6\uff0c\u5f15\u5165\u540e\u6587\u4ef6\u5c31\u88ab\u6253\u5f00\u4e86 \u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5dir player\u6765\u770b\u770b\u4ed6\u90fd\u6709\u4ec0\u4e48\u65b9\u6cd5\u8ba9\u6211\u4eec\u4f7f\u7528 >>> dir(player) ['__class__', '__del__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_args', '_base_args', '_gen_method_func', '_gen_propdoc', '_generate_methods', '_generate_properties', '_proc', '_process_args', '_propget', '_propset', '_run_command', '_stderr', '_stdout', 'af_add', 'af_clr', 'af_cmdline', 'af_del', 'af_switch', 'alt_src_step', 'angle', 'args', 'aspect', 'ass_use_margins', 'audio_bitrate', 'audio_codec', 'audio_delay', 'audio_format', 'balance', 'border', 'brightness', 'capturing', 'change_rectangle', 'channels', 'chapter', 'chapters', 'cmd_prefix', 'contrast', 'deinterlace', 'demuxer', 'dvdnav', 'edl_loadfile', 'edl_mark', 'exec_path', 'exit', 'file_filter', 'filename', 'forced_subs_only', 'fps', 'frame_drop', 'frame_step', 'framedropping', 'fullscreen', 'gamma', 'gui', 'height', 'help', 'hide', 'hue', 'introspect', 'is_alive', 'key_down_event', 'length', 'loadfile', 'loadlist', 'loop', 'menu', 'metadata', 'mute', 'ontop', 'osd', 'osd_show_progression', 'osd_show_property_text', 'osd_show_text', 'osdlevel', 'overlay_add', 'overlay_remove', 'panscan', 'path', 'pause', 'paused', 'percent_pos', 'pt_step', 'pt_up_step', 'quit', 'rootwin', 'run', 'samplerate', 'saturation', 'screenshot', 'seek', 'seek_chapter', 'set_menu', 'set_mouse_pos', 'spawn', 'speed', 'speed_incr', 'speed_mult', 'speed_set', 'stderr', 'stdout', 'stop', 'stream_end', 'stream_length', 'stream_pos', 'stream_start', 'stream_time_pos', 'sub', 'sub_alignment', 'sub_delay', 'sub_demux', 'sub_file', 'sub_forced_only', 'sub_load', 'sub_log', 'sub_pos', 'sub_remove', 'sub_scale', 'sub_select', 'sub_source', 'sub_step', 'sub_visibility', 'sub_vob', 'switch_angle', 'switch_audio', 'switch_program', 'switch_ratio', 'switch_title', 'switch_video', 'switch_vsync', 'teletext_add_dec', 'teletext_format', 'teletext_go_link', 'teletext_half_page', 'teletext_mode', 'teletext_page', 'teletext_subpage', 'time_pos', 'titles', 'tv_brightness', 'tv_contrast', 'tv_hue', 'tv_last_channel', 'tv_saturation', 'tv_set_brightness', 'tv_set_channel', 'tv_set_contrast', 'tv_set_freq', 'tv_set_hue', 'tv_set_norm', 'tv_set_saturation', 'tv_start_scan', 'tv_step_chanlist', 'tv_step_channel', 'tv_step_freq', 'tv_step_norm', 'use_master', 'version', 'video_bitrate', 'video_codec', 'video_format', 'vo_border', 'vo_fullscreen', 'vo_ontop', 'vo_rootwin', 'vobsub_lang', 'volume', 'vsync', 'width'] very well\uff01 \u770b\u6765\u6211\u4eec\u7684\u9700\u6c42\u662f\u53ef\u4ee5\u641e\u5b9a\u4e86\uff01 \u9700\u8981\u7684\u65b9\u6cd5 \u4e0b\u9762\u7f57\u5217\u4e0b\u9700\u8981\u4f7f\u7528\u7684\u65b9\u6cd5\uff1a player.pause() #\u6682\u505c player.filename #\u663e\u793a\u6587\u4ef6\u540d player.time_pos += 5 #\u5feb\u8fdb5s player.time_pos -= 5 #\u5feb\u90005s player.stream_length #\u67e5\u770b\u89c6\u9891\u957f\u5ea6 player.stream_pos #\u67e5\u770b\u89c6\u9891\u73b0\u5728\u7684\u4f4d\u7f6e\uff0c \u6839\u636e\u4e0a\u9762\u53ef\u4ee5\u505a\u51fa\u8fdb\u5ea6\u6761 player.volume #\u663e\u793a\u97f3\u91cf player.volume(+30.0) #\u5347\u9ad8\u97f3\u91cf player.volume(-30.0) #\u964d\u4f4e\u97f3\u91cf player.quit() #\u5173\u95ed\u89c6\u9891 \u597dok\uff0c\u6709\u4e86\u4ee5\u4e0a\u529f\u80fd\u5927\u5bb6\u662f\u4e0d\u662f\u5c31\u5df2\u7ecf\u53ef\u4ee5\u63a7\u5236Mplayer\u62c9\uff1f\u73b0\u5728\u5c31\u53ea\u5deeweb\u754c\u9762\u4e86\u3002","tags":"python","loc":"http://opslinux.com/pythonshi-xian-kong-zhi-mplayer.html","title":"python\u5b9e\u73b0\u63a7\u5236Mplayer"},{"text":"\u5176\u5b9e\u9879\u76ee\u5199\u5b8c\u597d\u4e45\u4e86\uff0c\u4e00\u76f4\u6ca1\u65f6\u95f4\u603b\u7ed3\uff0c\u6b63\u597d\u6700\u8fd1\u79bb\u804c\uff0c\u4e5f\u4e0d\u662f\u7279\u522b\u5fd9\u628a\u4e00\u4e9b\u81ea\u5df1\u8ba4\u4e3a\u4f7f\u7528\u7684\u9879\u76ee\u5206\u4eab\u4e00\u4e0b\u7ed9\u5927\u5bb6\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u5230\u5927\u5bb6\uff0c\u5373\u4f7f\u5e2e\u52a9\u4e0d\u5230\uff0c\u6211\u8fd8\u53ef\u4ee5\u5077\u5077\u56de\u6765\u770b\u4e0b\uff0c\u4ee5\u4fbf\u6e29\u4e60 Nginx\u65e5\u5fd7 \u6309\u65e5\u671f\u5207\u5272log 1 2 3 mv / var / log / nginx - server . access . log / var / log / nginx / nginx - server . access_ $ ( date - d \"yesterday\" + \"%Y%m% d \").log kill - USR1 `cat /etc/nginx/logs/nginx.pid` \u9996\u5148\u8981\u660e\u786e\u81ea\u5df1\u7684Nginx\u7684\u65e5\u5fd7\u683c\u5f0f\uff0c\u627e\u5230\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a 1 2 3 log_format main '$remote_addr - $remote_user [$time_local] \"$request\" ' '$status $body_bytes_sent \"$http_referer\" ' '\"$http_user_agent\" \"$http_x_forwarded_for\" \"$request_time\" \"$upstream_response_time\"' ; \u4ee5\u4e0a\u662f\u6211Nginx\u65e5\u5fd7\u7684\u683c\u5f0f Nginx\u65e5\u5fd7\u5206\u6790\u5904\u7406 \u5565\u4e5f\u522b\u8bf4\u4e86 \u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 #coding=utf-8 import linecache import re import time , datetime import glob import os import conn w = '''112.224.65.85 - - [20/Aug/2013:00:01:02 +0800] \"POST /api/topic/comments HTTP/1.1\" 200 3804 \"-\" \"Corax/0.7.0 CFNetwork/609.1.4 Darwin/13.0.0\" \"-\" \"1.173\" \"0.005\"''' files_dir = \"/home/corax/ops/data/\" bak_dir = \"/home/corax/ops/data/backup\" def readfile ( path ): filename = [] files = glob . glob ( path + '*.log' ) return files def readtime ( path ): read_time = [] files = glob . glob ( path + '*.log' ) print files for i in files : read_time . append ( i . split ( '_' )[ 1 ] . split ( '.' )[ 0 ]) read_time = set ( read_time ) return read_time def timestamp ( time_file ): return time . mktime ( time . strptime ( time_file , '%Y%b %d %H:%M:%S' )) def datestamp ( date_name ): return time . strptime ( date_name , '%Y%b %d ' ) def handle_log ( log_file ): ip = r\"?P<ip>[\\d.]*\" date = r\"?P<date>\\d+\" month = r\"?P<month>\\w+\" year = r\"?P<year>\\d+\" log_time = r\"?P<time>\\S+\" method = r\"?P<method>\\S+\" request = r\"?P<request>\\S+\" status = r\"?P<status>\\d+\" bodyBytesSent = r\"?P<bodyBytesSent>\\d+\" refer = r\"\"\"?P<refer> [&#94;\\\"]* \"\"\" userAgent = r\"\"\"?P<userAgent> \\S* \"\"\" forwardr = r\"\"\"?P<forwardr> [&#94;\\\"]* \"\"\" request_time = r\"\"\"?P<request_time> [&#94;\\\"]* \"\"\" response_time = r\"\"\"?P<response_time> [&#94;\\\"]* \"\"\" p = re . compile ( r\"( %s )\\ -\\ -\\ \\[( %s )/( %s )/( %s )\\:( %s )\\ [\\S]+\\]\\ \\\" ( %s )?[\\s]?( %s )?.*? \\\" \\ ( %s )\\ ( %s )\\ \\\" ( %s ) \\\" \\ \\\" ( %s ).*? \\\" \\ \\\" ( %s ) \\\" \\ \\\" ( %s ) \\\" \\ \\\" ( %s ) \\\" \" % ( ip , date , month , year , log_time , method , request , status , bodyBytesSent , refer , userAgent , forwardr , request_time , response_time ), re . VERBOSE ) s = time . time () log_list = [] for l in log_file : f = open ( l , 'r' ) file_all = f . read () m = re . findall ( p , file_all ) for g in m : time_all = ' %s%s%s %s ' % ( g [ 3 ], g [ 2 ], g [ 1 ], g [ 4 ]) time_format = timestamp ( time_all ) date = time . strftime ( \"%Y%m %d \" , datestamp ( ' %s%s%s ' % ( g [ 3 ], g [ 2 ], g [ 1 ]))) hour = g [ 4 ] . split ( \":\" )[ 0 ] # print date,hour if g [ 12 ] != \"-\" : req_time = float ( g [ 12 ]) else : req_time = None if g [ 13 ] != \"-\" and len ( g [ 13 ]) <= 5 : res_time = float ( g [ 13 ]) else : res_time = None log = { 'ip' : g [ 0 ], 'time' : time_format , 'method' : g [ 5 ], 'request' : g [ 6 ], 'status' : g [ 7 ], 'bodyBytesSent' : g [ 8 ], 'refer' : g [ 9 ], 'userAgent' : g [ 10 ], 'forwardr' : g [ 11 ], 'request_time' : req_time , 'response_time' : res_time , 'date' : int ( date ), 'hour' : int ( hour )} conn . db . log . insert ( log ) f . close () print \"mv %s %s \" % ( l , bak_dir ) os . system ( \"mv %s %s \" % ( l , bak_dir )) print time . time () - s if __name__ == '__main__' : lf = readfile ( files_dir ) print lf read_time = readtime ( files_dir ) print read_time handle_log ( lf ) \u6211\u4eec\u4e66\u63a5\u4e0a\u56de\uff0c\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u4e00\u4e0b\u68b3\u7406\uff1a w\u53d8\u91cf\u5b58\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u7684Nginx\u65e5\u5fd7\u6761\u76ee,readfile()\u51fd\u6570\u662f\u8bfb\u53d6\u65e5\u5fd7\u6587\u4ef6\uff0c\u7136\u540e\u8fd4\u56de\u6587\u4ef6\u7684\u8def\u5f84\uff0creadtime()\u51fd\u6570\u662f\u83b7\u53d6\u65e5\u671f\uff0chandle_log()\u51fd\u6570\u662f\u5206\u6790\u65e5\u5fd7\u7684\u51fd\u6570\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u65e5\u5fd7\u6bb5\uff0c\u7528\u6b63\u5219\u7cbe\u5fc3\u5339\u914d\u7b5b\u9009\u51fa\u6765\uff0c\u7136\u540e\u5c31\u662f\u5165\u5e93\u3002\u8fd9\u91cc\u9762\u8bd5\u5199\u5165\u5230\u4e86MongDB\u4e2d\u3002 \u597d\u4e86\uff0c\u65e5\u5fd7\u90fd\u653e\u5230NOSQL\u5f53\u4e2d\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5206\u6790\u7684\u95ee\u9898\uff0c\u8fd9\u4e2a\u5c31\u662f\u4ec1\u8005\u89c1\u4ec1\u667a\u8005\u89c1\u667a\u7684\u4e8b\u4e86\uff0c\u6bcf\u4e2a\u516c\u53f8\u7684\u9700\u6c42\u4e0d\u4e00\u6837\uff0c\u6709\u7528redis\u5206\u6790\u7684\uff0c\u6709\u7528zeromq\u5206\u6790\uff0c\u8fd9\u5c31\u770b\u5927\u5bb6\u7684\u559c\u597d\u4e86\uff0c\u5206\u6790\u5b8c\u6700\u540e\u8fd8\u662f\u63a8\u8350\u5927\u5bb6\u7528highcharts\u51fa\u56fe\u6bd4\u8f83\u597d\u770b\uff0c\u8fd9\u91cc\u63a8\u8350\u4f7f\u7528highcharts\u7684\u6587\u7ae0\uff1a highcharts\u4f7f\u7528 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"python","loc":"http://opslinux.com/pythonshi-xian-fen-xi-nginxri-zhi-webping-tai.html","title":"python\u5b9e\u73b0\u5206\u6790Nginx\u65e5\u5fd7web\u5e73\u53f0"},{"text":"\u6700\u8fd1\u516c\u53f8\u5f00\u53d1\u65b0\u9879\u76ee\u4f7f\u7528tornado+mysql\uff0c\u4f20\u7edf\u7684SQL\u5f00\u53d1\u65b9\u5f0f\u5927\u5bb6\u90fd\u611f\u89c9\u4e0d\u723d\uff08\u5176\u5b9e\u6211\u4e0d\u592a\u4f1a\uff0c\u54c8\u54c8\uff09\uff0c\u6240\u4ee5\u5f00\u59cb\u4f7f\u7528orm\u65b9\u5f0f\uff0c\u8fd9\u4e5f\u662fpython\u793e\u533a\u5927\u5bb6\u6240\u63a8\u5d07\u7684\u65b9\u5f0f\uff0c\u6280\u672f\u9009\u578b\u5c31\u9009\u62e9\u4e86\u9738\u9053\u7684\u795e\u5668 sqlalchemy \u8fd4\u56dejson\u6570\u636e \u4f7f\u7528tornado\u505aapps\u7684\u670d\u52a1\u7aef\uff0c\u5f88\u591a\u65f6\u5019\u9700\u8981\u8fd4\u56dejson\u6570\u636e\uff0c\u4f46\u662fsqlalchemy\u9ed8\u8ba4\u6ca1\u63d0\u4f9b\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6240\u4ee5\u7ecf\u8fc7\u4eca\u5929\u67e5\u8be2\u7f51\u4e0a\u7684\u8d44\u6599\u81ea\u5df1\u5b9e\u73b0\u4e86\u4e00\u4e2a\u65b9\u6cd5\u3002 \u4e3a\u4e86\u5728tornado\u4e2d\u589e\u52a0json\u652f\u6301\uff0c\u9700\u8981\u5728model\uff08\u9ed8\u8ba4tornado\u662f\u6ca1\u6709model\u7684\uff0c\u4f7f\u7528sqlalchemy\uff0c\u5927\u5bb6\u4e00\u822c\u4f1a\u5199\u4e2amodels.py\u6587\u4ef6\u6765\u505amodel\uff09\u91cc\u9762\u589e\u52a0__json__\u65b9\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #coding=utf-8 import json from sqlalchemy import create_engine , DDL , event from sqlalchemy.orm import sessionmaker from sqlalchemy import Column , Integer , String , Date , Boolean , Unicode from sqlalchemy.ext.declarative import declarative_base from settings import mysql_passwd DB_CONNECT_STRING = 'mysql+mysqlconnector://root: %s @localhost:3306/test?charset=utf8' % mysql_passwd engine = create_engine ( DB_CONNECT_STRING , echo = False ) DB_Session = sessionmaker ( bind = engine ) session = DB_Session () Base = declarative_base () #\u7ed9Base\u6dfb\u52a0__json__\u65b9\u6cd5 \u4f7f\u8f93\u51faJSON\u6570\u636e def sqlalchemy_json ( self ): obj_dict = self . __dict__ return dict (( key , obj_dict [ key ]) for key in obj_dict if not key . startswith ( \"_\" )) Base . __json__ = sqlalchemy_json \u8fd9\u6837\u641e\u5b9a\u4ee5\u540e\u5728\u4f60\u7684\u7a0b\u5e8f\u60f3\u8981\u8c03\u7528model\u7684\u65f6\u5019\u5982\u4e0b\u4f7f\u7528\u5c31\u4f1a\u8f93\u51fajson\u6570\u636e\uff1a 1 2 3 4 5 class users ( BaseHandler ): def get ( self ): user_id = self . get_argument ( \"user_id\" ) #\u83b7\u53d6user_id user_info = self . session . query ( models . User ) . filter_by ( id = user_id ) . first () #\u67e5\u8be2user\u4fe1\u606f self . write ( json . dumps ({ \"status\" : 0 , \"msg\" : \"\u8fd4\u56de\u6210\u529f\" , \"user_info\" : models . User . __json__ ( user )}, ensure_ascii = False , indent = 4 )) #\u8fd4\u56de\u81ea\u5b9a\u4e49\u6570\u636e\uff0cmodels.User.__json__(user)\u5c31\u662f\u4f7f\u7528\u5728Base\u521b\u5efa\u7684__json__\u65b9\u6cd5\u6765\u8fd4\u56dejson\u6570\u636e\uff0censure_ascii=False\u662f\u4e0d\u4f7f\u7528ascii\u4e3a\u4e86\u663e\u793a\u4e2d\u6587\uff0cindent=4\u662f\u7f29\u8fdb\uff0c\u683c\u5f0f\u5316\u8f93\u51fajson\u6bd4\u8f83\u7f8e\u89c2","tags":"sqlalchemy","loc":"http://opslinux.com/sqlalchemycha-xun-fan-hui-jsonshu-ju.html","title":"sqlalchemy\u67e5\u8be2\u8fd4\u56dejson\u6570\u636e"},{"text":"HTTP\uff08HyperTextTransferProtocol\uff09\u5373\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff0c\u76ee\u524d\u7f51\u9875\u4f20\u8f93\u7684\u7684\u901a\u7528\u534f\u8bae\u3002HTTP\u534f\u8bae\u91c7\u7528\u4e86\u8bf7\u6c42/\u54cd\u5e94\u6a21\u578b\uff0c\u6d4f\u89c8\u5668\u6216\u5176\u4ed6\u5ba2\u6237\u7aef\u53d1\u51fa\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u7ed9\u4e0e\u54cd\u5e94\u3002\u5c31\u6574\u4e2a\u7f51\u7edc\u8d44\u6e90\u4f20\u8f93\u800c\u8a00\uff0c\u5305\u62ecmessage-header\u548cmessage-body\u4e24\u90e8\u5206\u3002\u9996\u5148\u4f20\u9012message- header\uff0c\u5373http header\u6d88\u606f \u3002http header \u6d88\u606f\u901a\u5e38\u88ab\u5206\u4e3a4\u4e2a\u90e8\u5206\uff1ageneral header, request header, response header, entity header\u3002\u4f46\u662f\u8fd9\u79cd\u5206\u6cd5\u5c31\u7406\u89e3\u800c\u8a00\uff0c\u611f\u89c9\u754c\u9650\u4e0d\u592a\u660e\u786e\u3002\u6839\u636e\u7ef4\u57fa\u767e\u79d1\u5bf9http header\u5185\u5bb9\u7684\u7ec4\u7ec7\u5f62\u5f0f\uff0c\u5927\u4f53\u5206\u4e3aRequest\u548cResponse\u4e24\u90e8\u5206\u3002 Requests\u90e8\u5206 Header \u89e3\u91ca \u793a\u4f8b Accept \u6307\u5b9a\u5ba2\u6237\u7aef\u80fd\u591f\u63a5\u6536\u7684\u5185\u5bb9\u7c7b\u578b Accept: text/plain, text/html Accept-Charset \u6d4f\u89c8\u5668\u53ef\u4ee5\u63a5\u53d7\u7684\u5b57\u7b26\u7f16\u7801\u96c6 Accept-Charset: iso-8859-5 Accept-Encoding \u6307\u5b9a\u6d4f\u89c8\u5668\u53ef\u4ee5\u652f\u6301\u7684web\u670d\u52a1\u5668\u8fd4\u56de\u5185\u5bb9\u538b\u7f29\u7f16\u7801\u7c7b\u578b Accept-Encoding: compress, gzip Accept-Language \u6d4f\u89c8\u5668\u53ef\u63a5\u53d7\u7684\u8bed\u8a00 Accept-Language: en,zh Accept-Ranges \u53ef\u4ee5\u8bf7\u6c42\u7f51\u9875\u5b9e\u4f53\u7684\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5b50\u8303\u56f4\u5b57\u6bb5 Accept-Ranges: bytes Authorization HTTP\u6388\u6743\u7684\u6388\u6743\u8bc1\u4e66 Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ== Cache-Control \u6307\u5b9a\u8bf7\u6c42\u548c\u54cd\u5e94\u9075\u5faa\u7684\u7f13\u5b58\u673a\u5236 Cache-Control: no-cache Connection \u8868\u793a\u662f\u5426\u9700\u8981\u6301\u4e45\u8fde\u63a5\u3002\uff08HTTP 1.1\u9ed8\u8ba4\u8fdb\u884c\u6301\u4e45\u8fde\u63a5\uff09 Connection: close CookieHTTP \u8bf7\u6c42\u53d1\u9001\u65f6\uff0c\u4f1a\u628a\u4fdd\u5b58\u5728\u8be5\u8bf7\u6c42\u57df\u540d\u4e0b\u7684\u6240\u6709cookie\u503c\u4e00\u8d77\u53d1\u9001\u7ed9web\u670d\u52a1\u5668\u3002 Cookie: $Version=1; Skin=new; Content-Length \u8bf7\u6c42\u7684\u5185\u5bb9\u957f\u5ea6 Content-Length: 348 Content-Type \u8bf7\u6c42\u7684\u4e0e\u5b9e\u4f53\u5bf9\u5e94\u7684MIME\u4fe1\u606f Content-Type: application/x-www-form-urlencoded Date \u8bf7\u6c42\u53d1\u9001\u7684\u65e5\u671f\u548c\u65f6\u95f4 Date: Tue, 15 Nov 2010 08:12:31 GMT Expect \u8bf7\u6c42\u7684\u7279\u5b9a\u7684\u670d\u52a1\u5668\u884c\u4e3a Expect: 100-continue From \u53d1\u51fa\u8bf7\u6c42\u7684\u7528\u6237\u7684Email From: user@email.com Host \u6307\u5b9a\u8bf7\u6c42\u7684\u670d\u52a1\u5668\u7684\u57df\u540d\u548c\u7aef\u53e3\u53f7 Host: www.zcmhi.com If-Match \u53ea\u6709\u8bf7\u6c42\u5185\u5bb9\u4e0e\u5b9e\u4f53\u76f8\u5339\u914d\u624d\u6709\u6548 If-Match: \"737060cd8c284d8af7ad3082f209582d\" If-Modified-Since \u5982\u679c\u8bf7\u6c42\u7684\u90e8\u5206\u5728\u6307\u5b9a\u65f6\u95f4\u4e4b\u540e\u88ab\u4fee\u6539\u5219\u8bf7\u6c42\u6210\u529f\uff0c\u672a\u88ab\u4fee\u6539\u5219\u8fd4\u56de304\u4ee3\u7801 If-Modified-Since: Sat, 29 Oct 2010 19:43:31 GMT If-None-Match \u5982\u679c\u5185\u5bb9\u672a\u6539\u53d8\u8fd4\u56de304\u4ee3\u7801\uff0c\u53c2\u6570\u4e3a\u670d\u52a1\u5668\u5148\u524d\u53d1\u9001\u7684Etag\uff0c\u4e0e\u670d\u52a1\u5668\u56de\u5e94\u7684Etag\u6bd4\u8f83\u5224\u65ad\u662f\u5426\u6539\u53d8 If-None-Match: \"737060cd8c284d8af7ad3082f209582d\" If-Range \u5982\u679c\u5b9e\u4f53\u672a\u6539\u53d8\uff0c\u670d\u52a1\u5668\u53d1\u9001\u5ba2\u6237\u7aef\u4e22\u5931\u7684\u90e8\u5206\uff0c\u5426\u5219\u53d1\u9001\u6574\u4e2a\u5b9e\u4f53\u3002\u53c2\u6570\u4e5f\u4e3aEtag If-Range: \"737060cd8c284d8af7ad3082f209582d\" If-Unmodified-Since \u53ea\u5728\u5b9e\u4f53\u5728\u6307\u5b9a\u65f6\u95f4\u4e4b\u540e\u672a\u88ab\u4fee\u6539\u624d\u8bf7\u6c42\u6210\u529f If-Unmodified-Since: Sat, 29 Oct 2010 19:43:31 GMT Max-Forwards \u9650\u5236\u4fe1\u606f\u901a\u8fc7\u4ee3\u7406\u548c\u7f51\u5173\u4f20\u9001\u7684\u65f6\u95f4 Max-Forwards: 10 Pragma \u7528\u6765\u5305\u542b\u5b9e\u73b0\u7279\u5b9a\u7684\u6307\u4ee4 Pragma: no-cache Proxy-Authorization \u8fde\u63a5\u5230\u4ee3\u7406\u7684\u6388\u6743\u8bc1\u4e66 Proxy-Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ== Range \u53ea\u8bf7\u6c42\u5b9e\u4f53\u7684\u4e00\u90e8\u5206\uff0c\u6307\u5b9a\u8303\u56f4 Range: bytes=500-999 Referer \u5148\u524d\u7f51\u9875\u7684\u5730\u5740\uff0c\u5f53\u524d\u8bf7\u6c42\u7f51\u9875\u7d27\u968f\u5176\u540e,\u5373\u6765\u8def Referer: http://www.zcmhi.com/archives/71.html TE \u5ba2\u6237\u7aef\u613f\u610f\u63a5\u53d7\u7684\u4f20\u8f93\u7f16\u7801\uff0c\u5e76\u901a\u77e5\u670d\u52a1\u5668\u63a5\u53d7\u63a5\u53d7\u5c3e\u52a0\u5934\u4fe1\u606f TE: trailers,deflate;q=0.5 Upgrade \u5411\u670d\u52a1\u5668\u6307\u5b9a\u67d0\u79cd\u4f20\u8f93\u534f\u8bae\u4ee5\u4fbf\u670d\u52a1\u5668\u8fdb\u884c\u8f6c\u6362\uff08\u5982\u679c\u652f\u6301\uff09 Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11 User-Agent User-Agent\u7684\u5185\u5bb9\u5305\u542b\u53d1\u51fa\u8bf7\u6c42\u7684\u7528\u6237\u4fe1\u606f User-Agent: Mozilla/5.0 (Linux; X11) Via \u901a\u77e5\u4e2d\u95f4\u7f51\u5173\u6216\u4ee3\u7406\u670d\u52a1\u5668\u5730\u5740\uff0c\u901a\u4fe1\u534f\u8bae Via: 1.0 fred, 1.1 nowhere.com (Apache/1.1) Warning \u5173\u4e8e\u6d88\u606f\u5b9e\u4f53\u7684\u8b66\u544a\u4fe1\u606f Warn: 199 Miscellaneous warning Responses \u90e8\u5206 Header \u89e3\u91ca \u793a\u4f8b test test test","tags":"HTTP","loc":"http://opslinux.com/http-header-xiang-jie.html","title":"HTTP Header \u8be6\u89e3"},{"text":"\u8f6c\u8f7d\uff1a \u5730\u5740 . \u6982\u8981\uff1apython \u901a\u8fc7 HTTP \u4ea4\u4e92\u5904\u7406\u6570\u636e\u7684\u65f6\u5019\uff0curl \u91cc\u9762\u7684\u4e2d\u6587\u4ee5\u53ca\u7279\u6b8a\u5b57\u7b26\u8981\u505a\u5904\u7406\u7684\uff0c\u6765\u5b66\u4e60\u4e00\u4e0b urlencode \u4e0e urldecode \u4e4b\u95f4\u76f8\u4e92\u8f6c\u6362\u7684\u65b9\u6cd5\u3002 \u5f53url\u5730\u5740\u542b\u6709\u4e2d\u6587\uff0c\u6216\u8005\u53c2\u6570\u6709\u4e2d\u6587\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u7b97\u662f\u5f88\u6b63\u5e38\u4e86\uff0c\u4f46\u662f\u628a\u8fd9\u6837\u7684url\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7684\u65f6\u5019\uff08\u6700\u5e38\u89c1\u7684callback\uff09\uff0c\u9700\u8981\u628a\u4e00\u4e9b\u4e2d\u6587\u751a\u81f3'/'\u505a\u4e00\u4e0b\u7f16\u7801\u8f6c\u6362\u3002 \u4e00\u3001urlencode urllib\u5e93\u91cc\u9762\u6709\u4e2aurlencode\u51fd\u6570\uff0c\u53ef\u4ee5\u628akey-value\u8fd9\u6837\u7684\u952e\u503c\u5bf9\u8f6c\u6362\u6210\u6211\u4eec\u60f3\u8981\u7684\u683c\u5f0f\uff0c\u8fd4\u56de\u7684\u662fa=1&b=2\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982: >>> from urllib import urlencode >>> data = { ... 'a': 'test', ... 'name': '\u9b54\u517d' ... } >>> print urlencode(data) a=test&amp;name=%C4%A7%CA%DE \u5982\u679c\u53ea\u60f3\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884curlencode\u8f6c\u6362\uff0c\u600e\u4e48\u529e\uff1furllib\u63d0\u4f9b\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\uff1aquote() >>> from urllib import quote >>> quote('\u9b54\u517d') '%C4%A7%CA%DE' \u4e8c\u3001urldecode \u5f53urlencode\u4e4b\u540e\u7684\u5b57\u7b26\u4e32\u4f20\u9012\u8fc7\u6765\u4e4b\u540e\uff0c\u63a5\u53d7\u5b8c\u6bd5\u5c31\u8981\u89e3\u7801\u4e86\u2014\u2014urldecode\u3002urllib\u63d0\u4f9b\u4e86unquote()\u8fd9\u4e2a\u51fd\u6570\uff0c\u53ef\u6ca1\u6709urldecode()\uff01: >>> from urllib import unquote >>> unquote('%C4%A7%CA%DE') '\\xc4\\xa7\\xca\\xde' >>> print unquote('%C4%A7%CA%DE') \u9b54\u517d \u4e09\u3001\u8ba8\u8bba \u5728\u505aurldecode\u7684\u65f6\u5019\uff0c\u770bunquote()\u8fd9\u4e2a\u51fd\u6570\u7684\u8f93\u51fa\uff0c\u662f\u5bf9\u5e94\u4e2d\u6587\u5728gbk\u4e0b\u7684\u7f16\u7801\uff0c\u5728\u5bf9\u6bd4\u4e00\u4e0bquote()\u7684\u7ed3\u679c\u4e0d\u96be\u53d1\u73b0\uff0c\u6240\u8c13\u7684urlencode\u5c31\u662f\u628a\u5b57\u7b26\u4e32\u8f6c\u8f66gbk\u7f16\u7801\uff0c\u7136\u540e\u628a\\x\u66ff\u6362\u6210%\u3002\u5982\u679c\u4f60\u7684\u7ec8\u7aef\u662futf8\u7f16\u7801\u7684\uff0c\u90a3\u4e48\u8981\u628a\u7ed3\u679c\u518d\u8f6c\u6210utf8\u8f93\u51fa\uff0c\u5426\u5219\u5c31\u4e71\u7801\u3002 \u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\uff0c\u81ea\u5b9a\u4e49\u6216\u8005\u91cd\u5199urlencode()\u3001urldecode()\u7b49\u51fd\u6570\u3002","tags":"python","loc":"http://opslinux.com/pythonzhong-de-urlencodeyu-urldecode.html","title":"python\u4e2d\u7684urlencode\u4e0eurldecode"},{"text":"Nginx\u662f\u4fc4\u7f57\u65af\u4eba\u7f16\u5199\u7684\u5341\u5206\u8f7b\u91cf\u7ea7\u7684HTTP\u670d\u52a1\u5668,Nginx\uff0c\u5b83\u7684\u53d1\u97f3\u4e3a\"engine X\"\uff0c\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684HTTP\u548c\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u540c\u65f6\u4e5f\u662f\u4e00\u4e2aIMAP/POP3/SMTP \u4ee3\u7406\u670d\u52a1\u5668\uff0eNginx\u662f\u7531\u4fc4\u7f57\u65af\u4eba Igor Sysoev\u4e3a\u4fc4\u7f57\u65af\u8bbf\u95ee\u91cf\u7b2c\u4e8c\u7684 Rambler.ru\u7ad9\u70b9\u5f00\u53d1. Nginx\u4ee5\u4e8b\u4ef6\u9a71\u52a8\u7684\u65b9\u5f0f\u7f16\u5199\uff0c\u6240\u4ee5\u6709\u975e\u5e38\u597d\u7684\u6027\u80fd\uff0c\u540c\u65f6\u4e5f\u662f\u4e00\u4e2a\u975e\u5e38\u9ad8\u6548\u7684\u53cd\u5411\u4ee3\u7406\u3001\u8d1f\u8f7d\u5e73\u8861\u3002\u5176\u62e5\u6709\u5339\u914d Lighttpd\u7684\u6027\u80fd\uff0c\u540c\u65f6\u8fd8\u6ca1\u6709Lighttpd\u7684\u5185\u5b58\u6cc4\u6f0f\u95ee\u9898\uff0c\u800c\u4e14Lighttpd\u7684mod_proxy\u4e5f\u6709\u4e00\u4e9b\u95ee\u9898\u5e76\u4e14\u5f88\u4e45\u6ca1\u6709\u66f4\u65b0\u3002\u4f46\u662fNginx\u5e76\u4e0d\u652f\u6301cgi\u65b9\u5f0f\u8fd0\u884c\uff0c\u539f\u56e0\u662f\u53ef\u4ee5\u51cf\u5c11\u56e0\u6b64\u5e26\u6765\u7684\u4e00\u4e9b\u7a0b\u5e8f\u4e0a\u7684\u6f0f\u6d1e\u3002\u6240\u4ee5\u5fc5\u987b\u4f7f\u7528FastCGI\u65b9\u5f0f\u6765\u6267\u884cPHP\u7a0b\u5e8f\u3002 nginx\u505a\u4e3aHTTP\u670d\u52a1\u5668\uff0c\u6709\u4ee5\u4e0b\u51e0\u9879\u57fa\u672c\u7279\u6027\uff1a \u5904\u7406\u9759\u6001\u6587\u4ef6\uff0c\u7d22\u5f15\u6587\u4ef6\u4ee5\u53ca\u81ea\u52a8\u7d22\u5f15\uff1b\u6253\u5f00\u6587\u4ef6\u63cf\u8ff0\u7b26\u7f13\u51b2\uff0e \u65e0\u7f13\u5b58\u7684\u53cd\u5411\u4ee3\u7406\u52a0\u901f\uff0c\u7b80\u5355\u7684\u8d1f\u8f7d\u5747\u8861\u548c\u5bb9\u9519\uff0e FastCGI\uff0c\u7b80\u5355\u7684\u8d1f\u8f7d\u5747\u8861\u548c\u5bb9\u9519\uff0e \u6a21\u5757\u5316\u7684\u7ed3\u6784\u3002\u5305\u62ecgzipping, byte ranges, chunked responses,\u4ee5\u53ca SSI-filter\u7b49filter\u3002\u5982\u679c\u7531FastCGI\u6216\u5176\u5b83\u4ee3\u7406\u670d\u52a1\u5668\u5904\u7406\u5355\u9875\u4e2d\u5b58\u5728\u7684\u591a\u4e2aSSI\uff0c\u5219\u8fd9\u9879\u5904\u7406\u53ef\u4ee5\u5e76\u884c\u8fd0\u884c\uff0c\u800c\u4e0d\u9700\u8981\u76f8\u4e92\u7b49\u5f85\u3002 Nginx\u4e13\u4e3a\u6027\u80fd\u4f18\u5316\u800c\u5f00\u53d1\uff0c\u6027\u80fd\u662f\u5176\u6700\u91cd\u8981\u7684\u8003\u91cf,\u5b9e\u73b0\u4e0a\u975e\u5e38\u6ce8\u91cd\u6548\u7387\u3002\u5b83\u652f\u6301\u5185\u6838Poll\u6a21\u578b\uff0c\u80fd\u7ecf\u53d7\u9ad8\u8d1f\u8f7d\u7684\u8003\u9a8c,\u6709\u62a5\u544a\u8868\u660e\u80fd\u652f\u6301\u9ad8\u8fbe 50,000\u4e2a\u5e76\u53d1\u8fde\u63a5\u6570\u3002 Nginx\u5177\u6709\u5f88\u9ad8\u7684\u7a33\u5b9a\u6027\u3002\u5176\u5b83HTTP\u670d\u52a1\u5668\uff0c\u5f53\u9047\u5230\u8bbf\u95ee\u7684\u5cf0\u503c\uff0c\u6216\u8005\u6709\u4eba\u6076\u610f\u53d1\u8d77\u6162\u901f\u8fde\u63a5\u65f6\uff0c\u4e5f\u5f88\u53ef\u80fd\u4f1a\u5bfc\u81f4\u670d\u52a1\u5668\u7269\u7406\u5185\u5b58\u8017\u5c3d\u9891\u7e41\u4ea4\u6362\uff0c\u5931\u53bb\u54cd\u5e94\uff0c\u53ea\u80fd\u91cd\u542f\u670d\u52a1\u5668\u3002\u4f8b\u5982\u5f53\u524dapache\u4e00\u65e6\u4e0a\u5230200\u4e2a\u4ee5\u4e0a\u8fdb\u7a0b\uff0cweb\u54cd\u5e94\u901f\u5ea6\u5c31\u660e\u663e\u975e\u5e38\u7f13\u6162\u4e86\u3002\u800cNginx\u91c7\u53d6\u4e86\u5206\u9636\u6bb5\u8d44\u6e90\u5206\u914d\u6280\u672f\uff0c\u4f7f\u5f97\u5b83\u7684CPU\u4e0e\u5185\u5b58\u5360\u7528\u7387\u975e\u5e38\u4f4e\u3002nginx\u5b98\u65b9\u8868\u793a\u4fdd\u630110,000\u4e2a\u6ca1\u6709\u6d3b\u52a8\u7684\u8fde\u63a5\uff0c\u5b83\u53ea\u53602.5M\u5185\u5b58\uff0c\u6240\u4ee5\u7c7b\u4f3cDOS\u8fd9\u6837\u7684\u653b\u51fb\u5bf9nginx\u6765\u8bf4\u57fa\u672c\u4e0a\u662f\u6beb\u65e0\u7528\u5904\u7684\u3002\u5c31\u7a33\u5b9a\u6027\u800c\u8a00,nginx\u6bd4lighthttpd\u66f4\u80dc\u4e00\u7b79\u3002 Nginx\u652f\u6301\u70ed\u90e8\u7f72\u3002\u5b83\u7684\u542f\u52a8\u7279\u522b\u5bb9\u6613, \u5e76\u4e14\u51e0\u4e4e\u53ef\u4ee5\u505a\u52307*24\u4e0d\u95f4\u65ad\u8fd0\u884c\uff0c\u5373\u4f7f\u8fd0\u884c\u6570\u4e2a\u6708\u4e5f\u4e0d\u9700\u8981\u91cd\u65b0\u542f\u52a8\u3002\u4f60\u8fd8\u80fd\u591f\u5728\u4e0d\u95f4\u65ad\u670d\u52a1\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u8f6f\u4ef6\u7248\u672c\u8fdb\u884c\u8fdb\u884c\u5347\u7ea7\u3002 \u7f16\u8bd1\u5b89\u88c5\u8fc7\u7a0b\u4f18\u5316 \u5728\u7f16\u8bd1Nginx\u65f6\uff0c\u9ed8\u8ba4\u4ee5debug\u6a21\u5f0f\u8fdb\u884c\uff0c\u800c\u5728debug\u6a21\u5f0f\u4e0b\u4f1a\u63d2\u5165\u5f88\u591a\u8ddf\u8e2a\u548cASSERT\u4e4b\u7c7b\u7684\u4fe1\u606f\uff0c\u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u4e00\u4e2aNginx\u8981\u6709\u597d\u51e0\u5146\u5b57\u8282\u3002\u5728\u7f16\u8bd1\u524d\u53d6\u6d88Nginx\u7684debug\u6a21\u5f0f\uff0c\u7f16\u8bd1\u5b8c\u6210\u540eNginx\u53ea\u6709\u51e0\u767e\u5343\u5b57\u8282\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u7f16\u8bd1\u4e4b\u524d\uff0c\u4fee\u6539\u76f8\u5173\u6e90\u7801\uff0c\u53d6\u6d88debug\u6a21\u5f0f\uff0c\u5177\u4f53\u65b9\u6cd5\u5982\u4e0b\uff1a \u5728Nginx\u6e90\u7801\u6587\u4ef6\u88ab\u89e3\u538b\u540e\uff0c\u627e\u5230\u6e90\u7801\u76ee\u5f55\u4e0b\u7684auto/cc/gcc\u6587\u4ef6\uff0c\u5728\u5176\u4e2d\u627e\u5230\u5982\u4e0b\u51e0\u884c: # debug CFLAGS=\"$CFLAGS -g\" \u4e3a\u7279\u5b9a\u7684CPU\u6307\u5b9aCPU\u7c7b\u578b\u7f16\u8bd1\u4f18\u5316 \u5728\u7f16\u8bd1Nginx\u65f6\uff0c\u9ed8\u8ba4\u7684GCC\u7f16\u8bd1\u53c2\u6570\u662f\"-O\"\uff0c\u8981\u4f18\u5316GCC\u7f16\u8bd1\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4e24\u4e2a\u53c2\u6570: --with-cc-opt='-O3' --with-cpu-opt=CPU #\u4e3a\u7279\u5b9a\u7684 CPU \u7f16\u8bd1\uff0c\u6709\u6548\u7684\u503c\u5305\u62ec\uff1apentium, pentiumpro, pentium3, pentium4, athlon, opteron, amd64, sparc32, sparc64, ppc64 \u8981\u786e\u5b9aCPU\u7c7b\u578b\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4: [root@localhost home]#cat /proc/cpuinfo | grep \"model name\" \u5229\u7528TCMalloc\u4f18\u5316Nginx\u7684\u6027\u80fd TCMalloc\u7684\u5168\u79f0\u4e3aThread-Caching Malloc\uff0c\u662f\u8c37\u6b4c\u5f00\u53d1\u7684\u5f00\u6e90\u5de5\u5177\"google-perftools\"\u4e2d\u7684\u4e00\u4e2a\u6210\u5458\u3002\u4e0e\u6807\u51c6\u7684glibc\u5e93\u7684malloc\u76f8\u6bd4\uff0cTCMalloc\u5e93\u5728\u5185\u5b58\u5206\u914d\u6548\u7387\u548c\u901f\u5ea6\u4e0a\u8981\u9ad8\u5f88\u591a\uff0c\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u63d0\u9ad8\u4e86\u670d\u52a1\u5668\u5728\u9ad8\u5e76\u53d1\u60c5\u51b5\u4e0b\u7684\u6027\u80fd\uff0c\u4ece\u800c\u964d\u4f4e\u7cfb\u7edf\u8d1f\u8f7d\u3002\u4e0b\u9762\u7b80\u5355\u4ecb\u7ecd\u5982\u4f55\u4e3aNginx\u6dfb\u52a0TCMalloc\u5e93\u652f\u6301\u3002 \u8981\u5b89\u88c5TCMalloc\u5e93\uff0c\u9700\u8981\u5b89\u88c5libunwind\uff0832\u4f4d\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u9700\u8981\u5b89\u88c5\uff09\u548cgoogle-perftools\u4e24\u4e2a\u8f6f\u4ef6\u5305\uff0clibunwind\u5e93\u4e3a\u57fa\u4e8e64\u4f4dCPU\u548c\u64cd\u4f5c\u7cfb\u7edf\u7684\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u57fa\u672c\u51fd\u6570\u8c03\u7528\u94fe\u548c\u51fd\u6570\u8c03\u7528\u5bc4\u5b58\u5668\u529f\u80fd\u3002\u4e0b\u9762\u4ecb\u7ecd\u5229\u7528TCMalloc\u4f18\u5316Nginx\u7684\u5177\u4f53\u64cd\u4f5c\u8fc7\u7a0b\uff1a 1.\u5b89\u88c5libunwind\u5e93 \u53ef\u4ee5\u4ecehttp://download.savannah.gnu.org/releases/libunwind\u4e0b\u8f7d\u76f8\u5e94\u7684libunwind\u7248\u672c\uff0c\u8fd9\u91cc\u4e0b\u8f7d\u7684\u662flibunwind-0.99-alpha.tar.gz\uff0c\u5b89\u88c5\u8fc7\u7a0b\u5982\u4e0b [root@localhost home]#tar zxvf libunwind-0.99-alpha.tar.gz [root@localhost home]# cd libunwind-0.99-alpha/ [root@localhost libunwind-0.99-alpha]#CFLAGS=-fPIC ./configure [root@localhost libunwind-0.99-alpha]#make CFLAGS=-fPIC [root@localhost libunwind-0.99-alpha]#make CFLAGS=-fPIC install 2.\u5b89\u88c5google-perftools \u53ef\u4ee5\u4ecehttp://google-perftools.googlecode.com\u4e0b\u8f7d\u76f8\u5e94\u7684google-perftools\u7248\u672c\uff0c\u8fd9\u91cc\u4e0b\u8f7d\u7684\u662fgoogle-perftools-1.8.tar.gz\uff0c\u5b89\u88c5\u8fc7\u7a0b\u5982\u4e0b: [root@localhost home]# tar zxvf google-perftools-1.8.tar.gz [root@localhost home]# cd google-perftools-1.8/ [root@localhost google-perftools-1.8]# ./configure [root@localhost google-perftools-1.8]# make && make install [root@localhost google-perftools-1.8]# echo \"/usr/local/lib\" > /etc/ld.so.conf.d/usr_local_lib.conf [root@localhost google-perftools-1.8]# ldconfig \u81f3\u6b64\uff0cgoogle-perftools\u5b89\u88c5\u5b8c\u6210\u3002 3.\u91cd\u65b0\u7f16\u8bd1Nginx \u4e3a\u4e86\u4f7fNginx\u652f\u6301google-perftools\uff0c\u9700\u8981\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u6dfb\u52a0\"\u2013with-google_perftools_module\"\u9009\u9879\u91cd\u65b0\u7f16\u8bd1Nginx\uff0c\u5b89\u88c5\u4ee3\u7801\u5982\u4e0b: [root@localhostnginx-0.7.65]#./configure \\ >--with-google_perftools_module --with-http_stub_status_module --prefix=/opt/nginx [root@localhost nginx-0.7.65]#make [root@localhost nginx-0.7.65]#make install \u5230\u8fd9\u91ccNginx\u5b89\u88c5\u5b8c\u6210\u3002 4.\u4e3agoogle-perftools\u6dfb\u52a0\u7ebf\u7a0b\u76ee\u5f55 \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u76ee\u5f55\uff0c\u8fd9\u91cc\u5c06\u6587\u4ef6\u653e\u5728/tmp/tcmalloc\u4e0b\uff0c\u64cd\u4f5c\u5982\u4e0b: [root@localhost home]#mkdir /tmp/tcmalloc [root@localhost home]#chmod 0777 /tmp/tcmalloc 5.\u4fee\u6539Nginx\u4e3b\u914d\u7f6e\u6587\u4ef6 \u4fee\u6539nginx.conf\u6587\u4ef6\uff0c\u5728pid\u8fd9\u884c\u7684\u4e0b\u9762\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801: #pid logs/nginx.pid; google_perftools_profiles /tmp/tcmalloc; \u63a5\u7740\uff0c\u91cd\u542fNginx\uff0c\u5b8c\u6210google-perftools\u7684\u52a0\u8f7d\u3002 6.\u9a8c\u8bc1\u8fd0\u884c\u72b6\u6001 \u4e3a\u4e86\u9a8c\u8bc1google-perftools\u5df2\u7ecf\u6b63\u5e38\u52a0\u8f7d\uff0c\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u67e5\u770b: [root@ localhost home]# lsof -n | grep tcmalloc nginx 2395 nobody 9w REG 8,8 0 1599440 /tmp/tcmalloc.2395 nginx 2396 nobody 11w REG 8,8 0 1599443 /tmp/tcmalloc.2396 nginx 2397 nobody 13w REG 8,8 0 1599441 /tmp/tcmalloc.2397 nginx 2398 nobody 15w REG 8,8 0 1599442 /tmp/tcmalloc.2398 \u7531\u4e8e\u5728Nginx\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u8bbe\u7f6eworker_processes\u7684\u503c\u4e3a4\uff0c\u56e0\u6b64\u5f00\u542f\u4e864\u4e2aNginx\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u4f1a\u6709\u4e00\u884c\u8bb0\u5f55\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u6587\u4ef6\u540e\u9762\u7684\u6570\u5b57\u503c\u5c31\u662f\u542f\u52a8\u7684Nginx\u7684PID\u503c\u3002 \u81f3\u6b64\uff0c\u5229\u7528TCMalloc\u4f18\u5316Nginx\u7684\u64cd\u4f5c\u5b8c\u6210\u3002 Nginx\u5185\u6838\u53c2\u6570\u4f18\u5316 \u5185\u6838\u53c2\u6570\u7684\u4f18\u5316\uff0c\u4e3b\u8981\u662f\u5728Linux\u7cfb\u7edf\u4e2d\u9488\u5bf9Nginx\u5e94\u7528\u800c\u8fdb\u884c\u7684\u7cfb\u7edf\u5185\u6838\u53c2\u6570\u4f18\u5316\uff0c\u5e38\u89c1\u7684\u4f18\u5316\u53c2\u6570\u503c\u5982\u4e0b\u3002 \u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f18\u5316\u5b9e\u4f8b\u4ee5\u4f9b\u53c2\u8003: net.ipv4.tcp_max_tw_buckets = 6000 net.ipv4.ip_local_port_range = 1024 65000 net.ipv4.tcp_tw_recycle = 1 net.ipv4.tcp_tw_reuse = 1 net.ipv4.tcp_syncookies = 1 net.core.somaxconn = 262144 net.core.netdev_max_backlog = 262144 net.ipv4.tcp_max_orphans = 262144 net.ipv4.tcp_max_syn_backlog = 262144 net.ipv4.tcp_synack_retries = 1 net.ipv4.tcp_syn_retries = 1 net.ipv4.tcp_fin_timeout = 1 net.ipv4.tcp_keepalive_time = 30 \u5c06\u4e0a\u9762\u7684\u5185\u6838\u53c2\u6570\u503c\u52a0\u5165/etc/sysctl.conf\u6587\u4ef6\u4e2d\uff0c\u7136\u540e\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u4f7f\u4e4b\u751f\u6548: [root@ localhost home]#/sbin/sysctl -p \u4e0b\u9762\u662f\u5bf9\u5b9e\u4f8b\u4e2d\u9009\u9879\u7684\u542b\u4e49\u8fdb\u884c\u4ecb\u7ecd\uff1a net.ipv4.tcp_max_tw_buckets\u53c2\u6570\u7528\u6765\u8bbe\u5b9atimewait\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u662f180000\uff0c\u8fd9\u91cc\u8bbe\u4e3a6000\u3002 net.ipv4.ip_local_port_range\u9009\u9879\u7528\u6765\u8bbe\u5b9a\u5141\u8bb8\u7cfb\u7edf\u6253\u5f00\u7684\u7aef\u53e3\u8303\u56f4\u3002 net.ipv4.tcp_tw_recycle\u9009\u9879\u7528\u4e8e\u8bbe\u7f6e\u542f\u7528timewait\u5feb\u901f\u56de\u6536\u3002 net.ipv4.tcp_tw_reuse\u9009\u9879\u7528\u4e8e\u8bbe\u7f6e\u5f00\u542f\u91cd\u7528\uff0c\u5141\u8bb8\u5c06TIME-WAIT sockets\u91cd\u65b0\u7528\u4e8e\u65b0\u7684TCP\u8fde\u63a5\u3002 net.ipv4.tcp_syncookies\u9009\u9879\u7528\u4e8e\u8bbe\u7f6e\u5f00\u542fSYN Cookies\uff0c\u5f53\u51fa\u73b0SYN\u7b49\u5f85\u961f\u5217\u6ea2\u51fa\u65f6\uff0c\u542f\u7528cookies\u8fdb\u884c\u5904\u7406\u3002 net.core.somaxconn\u9009\u9879\u9ed8\u8ba4\u503c\u662f128\uff0c \u8fd9\u4e2a\u53c2\u6570\u7528\u4e8e\u8c03\u8282\u7cfb\u7edf\u540c\u65f6\u53d1\u8d77\u7684tcp\u8fde\u63a5\u6570\uff0c\u5728\u9ad8\u5e76\u53d1\u7684\u8bf7\u6c42\u4e2d\uff0c\u9ed8\u8ba4\u7684\u503c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u94fe\u63a5\u8d85\u65f6\u6216\u8005\u91cd\u4f20\uff0c\u56e0\u6b64\uff0c\u9700\u8981\u7ed3\u5408\u5e76\u53d1\u8bf7\u6c42\u6570\u6765\u8c03\u8282\u6b64\u503c\u3002 net.core.netdev_max_backlog\u9009\u9879\u8868\u793a\u5f53\u6bcf\u4e2a\u7f51\u7edc\u63a5\u53e3\u63a5\u6536\u6570\u636e\u5305\u7684\u901f\u7387\u6bd4\u5185\u6838\u5904\u7406\u8fd9\u4e9b\u5305\u7684\u901f\u7387\u5feb\u65f6\uff0c\u5141\u8bb8\u53d1\u9001\u5230\u961f\u5217\u7684\u6570\u636e\u5305\u7684\u6700\u5927\u6570\u76ee\u3002 net.ipv4.tcp_max_orphans\u9009\u9879\u7528\u4e8e\u8bbe\u5b9a\u7cfb\u7edf\u4e2d\u6700\u591a\u6709\u591a\u5c11\u4e2aTCP\u5957\u63a5\u5b57\u4e0d\u88ab\u5173\u8054\u5230\u4efb\u4f55\u4e00\u4e2a\u7528\u6237\u6587\u4ef6\u53e5\u67c4\u4e0a\u3002\u5982\u679c\u8d85\u8fc7\u8fd9\u4e2a\u6570\u5b57\uff0c\u5b64\u7acb\u8fde\u63a5\u5c06\u7acb\u5373\u88ab\u590d\u4f4d\u5e76\u6253\u5370\u51fa\u8b66\u544a\u4fe1\u606f\u3002\u8fd9\u4e2a\u9650\u5236\u53ea\u662f\u4e3a\u4e86\u9632\u6b62\u7b80\u5355\u7684DoS\u653b\u51fb\u3002\u4e0d\u80fd\u8fc7\u5206\u4f9d\u9760\u8fd9\u4e2a\u9650\u5236\u751a\u81f3\u4eba\u4e3a\u51cf\u5c0f\u8fd9\u4e2a\u503c\uff0c\u66f4\u591a\u7684\u60c5\u51b5\u662f\u589e\u52a0\u8fd9\u4e2a\u503c\u3002 net.ipv4.tcp_max_syn_backlog\u9009\u9879\u7528\u4e8e\u8bb0\u5f55\u90a3\u4e9b\u5c1a\u672a\u6536\u5230\u5ba2\u6237\u7aef\u786e\u8ba4\u4fe1\u606f\u7684\u8fde\u63a5\u8bf7\u6c42\u7684\u6700\u5927\u503c\u3002\u5bf9\u4e8e\u6709128MB\u5185\u5b58\u7684\u7cfb\u7edf\u800c\u8a00\uff0c\u6b64\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\u662f1024\uff0c\u5bf9\u5c0f\u5185\u5b58\u7684\u7cfb\u7edf\u5219\u662f128\u3002 net.ipv4.tcp_synack_retries\u53c2\u6570\u7684\u503c\u51b3\u5b9a\u4e86\u5185\u6838\u653e\u5f03\u8fde\u63a5\u4e4b\u524d\u53d1\u9001SYN+ACK\u5305\u7684\u6570\u91cf\u3002 net.ipv4.tcp_syn_retries\u9009\u9879\u8868\u793a\u5728\u5185\u6838\u653e\u5f03\u5efa\u7acb\u8fde\u63a5\u4e4b\u524d\u53d1\u9001SYN\u5305\u7684\u6570\u91cf\u3002 net.ipv4.tcp_fin_timeout\u9009\u9879\u51b3\u5b9a\u4e86\u5957\u63a5\u5b57\u4fdd\u6301\u5728FIN-WAIT-2\u72b6\u6001\u7684\u65f6\u95f4\u3002\u9ed8\u8ba4\u503c\u662f60\u79d2\u3002\u6b63\u786e\u8bbe\u7f6e\u8fd9\u4e2a\u503c\u975e\u5e38\u91cd\u8981\uff0c\u6709\u65f6\u5019\u5373\u4f7f\u4e00\u4e2a\u8d1f\u8f7d\u5f88\u5c0f\u7684Web\u670d\u52a1\u5668\uff0c\u4e5f\u4f1a\u51fa\u73b0\u56e0\u4e3a\u5927\u91cf\u7684\u6b7b\u5957\u63a5\u5b57\u800c\u4ea7\u751f\u5185\u5b58\u6ea2\u51fa\u7684\u98ce\u9669\u3002 net.ipv4.tcp_keepalive_time\u9009\u9879\u8868\u793a\u5f53keepalive\u542f\u7528\u7684\u65f6\u5019\uff0cTCP\u53d1\u9001keepalive\u6d88\u606f\u7684\u9891\u5ea6\u3002\u9ed8\u8ba4\u503c\u662f2\uff08\u5355\u4f4d\u662f\u5c0f\u65f6\uff09\u3002 \u4e0b\u9762\u8d34\u4e00\u4e2a\u5b8c\u6574\u7684\u5185\u6838\u4f18\u5316\u8bbe\u7f6e: vi /etc/sysctl.conf CentOS5.5\u4e2d\u53ef\u4ee5\u5c06\u6240\u6709\u5185\u5bb9\u6e05\u7a7a\u76f4\u63a5\u66ff\u6362\u4e3a\u5982\u4e0b\u5185\u5bb9: net.ipv4.ip_forward = 0 net.ipv4.conf.default.rp_filter = 1 net.ipv4.conf.default.accept_source_route = 0 kernel.sysrq = 0 kernel.core_uses_pid = 1 net.ipv4.tcp_syncookies = 1 kernel.msgmnb = 65536 kernel.msgmax = 65536 kernel.shmmax = 68719476736 kernel.shmall = 4294967296 net.ipv4.tcp_max_tw_buckets = 6000 net.ipv4.tcp_sack = 1 net.ipv4.tcp_window_scaling = 1 net.ipv4.tcp_rmem = 4096 87380 4194304 net.ipv4.tcp_wmem = 4096 16384 4194304 net.core.wmem_default = 8388608 net.core.rmem_default = 8388608 net.core.rmem_max = 16777216 net.core.wmem_max = 16777216 net.core.netdev_max_backlog = 262144 net.core.somaxconn = 262144 net.ipv4.tcp_max_orphans = 3276800 net.ipv4.tcp_max_syn_backlog = 262144 net.ipv4.tcp_timestamps = 0 net.ipv4.tcp_synack_retries = 1 net.ipv4.tcp_syn_retries = 1 net.ipv4.tcp_tw_recycle = 1 net.ipv4.tcp_tw_reuse = 1 net.ipv4.tcp_mem = 94500000 915000000 927000000 net.ipv4.tcp_fin_timeout = 1 net.ipv4.tcp_keepalive_time = 30 net.ipv4.ip_local_port_range = 1024 65000 \u914d\u7f6e\u6587\u4ef6\u4f18\u5316 \u57fa\u672c\u4f18\u5316 \u4e00\u822c\u6765\u8bf4nginx \u914d\u7f6e\u6587\u4ef6\u4e2d\u5bf9\u4f18\u5316\u6bd4\u8f83\u6709\u4f5c\u7528\u7684\u4e3a\u4ee5\u4e0b\u51e0\u9879\uff1a worker_processes 8; nginx \u8fdb\u7a0b\u6570\uff0c\u5efa\u8bae\u6309\u7167cpu \u6570\u76ee\u6765\u6307\u5b9a\uff0c\u4e00\u822c\u4e3a\u5b83\u7684\u500d\u6570 (\u5982,2\u4e2a\u56db\u6838\u7684cpu\u8ba1\u4e3a8)\u3002 worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000; \u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u5206\u914dcpu\uff0c\u4e0a\u4f8b\u4e2d\u5c068 \u4e2a\u8fdb\u7a0b\u5206\u914d\u52308 \u4e2acpu\uff0c\u5f53\u7136\u53ef\u4ee5\u5199\u591a\u4e2a\uff0c\u6216\u8005\u5c06\u4e00 \u4e2a\u8fdb\u7a0b\u5206\u914d\u5230\u591a\u4e2acpu\u3002 worker_rlimit_nofile 65535; \u8fd9\u4e2a\u6307\u4ee4\u662f\u6307\u5f53\u4e00\u4e2anginx \u8fdb\u7a0b\u6253\u5f00\u7684\u6700\u591a\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u76ee\uff0c\u7406\u8bba\u503c\u5e94\u8be5\u662f\u6700\u591a\u6253\u5f00\u6587 \u4ef6\u6570\uff08ulimit -n\uff09\u4e0enginx \u8fdb\u7a0b\u6570\u76f8\u9664\uff0c\u4f46\u662fnginx \u5206\u914d\u8bf7\u6c42\u5e76\u4e0d\u662f\u90a3\u4e48\u5747\u5300\uff0c\u6240\u4ee5\u6700\u597d\u4e0eulimit -n \u7684\u503c\u4fdd\u6301\u4e00\u81f4\u3002\u8be6\u89c1 ulimit\u5173\u4e8e\u7cfb\u7edf\u8fde\u63a5\u6570\u7684\u4f18\u5316 \u73b0\u5728\u5728linux 2.6\u5185\u6838\u4e0b\u5f00\u542f\u6587\u4ef6\u6253\u5f00\u6570\u4e3a65535\uff0cworker_rlimit_nofile\u5c31\u76f8\u5e94\u5e94\u8be5\u586b\u519965535\u3002 \u8fd9\u662f\u56e0\u4e3anginx\u8c03\u5ea6\u65f6\u5206\u914d\u8bf7\u6c42\u5230\u8fdb\u7a0b\u5e76\u4e0d\u662f\u90a3\u4e48\u7684\u5747\u8861\uff0c\u6240\u4ee5\u5047\u5982\u586b\u519910240\uff0c\u603b\u5e76\u53d1\u91cf\u8fbe\u52303-4\u4e07\u65f6\u5c31\u6709\u8fdb\u7a0b\u53ef\u80fd\u8d85\u8fc710240\u4e86\uff0c\u8fd9\u65f6\u4f1a\u8fd4\u56de502\u9519\u8bef\u3002 \u67e5\u770blinux\u7cfb\u7edf\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u65b9\u6cd5: [root@web001 ~]# sysctl -a | grep fs.file fs.file-max = 789972 fs.file-nr = 510 0 789972 use epoll; \u4f7f\u7528epoll \u7684I/O \u6a21\u578b ( \u8865\u5145\u8bf4\u660e: \u4e0eapache\u76f8\u7c7b\uff0cnginx\u9488\u5bf9\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6709\u4e0d\u540c\u7684\u4e8b\u4ef6\u6a21\u578b A\uff09\u6807\u51c6\u4e8b\u4ef6\u6a21\u578b Select\u3001poll\u5c5e\u4e8e\u6807\u51c6\u4e8b\u4ef6\u6a21\u578b\uff0c\u5982\u679c\u5f53\u524d\u7cfb\u7edf\u4e0d\u5b58\u5728\u66f4\u6709\u6548\u7684\u65b9\u6cd5\uff0cnginx\u4f1a\u9009\u62e9select\u6216poll B\uff09\u9ad8\u6548\u4e8b\u4ef6\u6a21\u578b Kqueue\uff1a\u4f7f\u7528\u4e8e FreeBSD 4.1+, OpenBSD 2.9+, NetBSD 2.0 \u548c MacOS X. \u4f7f\u7528\u53cc\u5904\u7406\u5668\u7684MacOS X\u7cfb\u7edf\u4f7f\u7528kqueue\u53ef\u80fd\u4f1a\u9020\u6210\u5185\u6838\u5d29\u6e83\u3002 Epoll: \u4f7f\u7528\u4e8eLinux\u5185\u68382.6\u7248\u672c\u53ca\u4ee5\u540e\u7684\u7cfb\u7edf\u3002 /dev/poll\uff1a\u4f7f\u7528\u4e8e Solaris 7 11/99+, HP/UX 11.22+ (eventport), IRIX 6.5.15+ \u548c Tru64 UNIX 5.1A+\u3002 Eventport\uff1a\u4f7f\u7528\u4e8e Solaris 10. \u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u5185\u6838\u5d29\u6e83\u7684\u95ee\u9898\uff0c \u6709\u5fc5\u8981\u5b89\u88c5\u5b89\u5168\u8865\u4e01\u3002 ) worker_connections 65535; \u6bcf\u4e2a\u8fdb\u7a0b\u5141\u8bb8\u7684\u6700\u591a\u8fde\u63a5\u6570\uff0c \u7406\u8bba\u4e0a\u6bcf\u53f0nginx \u670d\u52a1\u5668\u7684\u6700\u5927\u8fde\u63a5\u6570\u4e3aworker_processes*worker_connections\u3002 keepalive_timeout 60; keepalive \u8d85\u65f6\u65f6\u95f4\u3002 client_header_buffer_size 4k; \u5ba2\u6237\u7aef\u8bf7\u6c42\u5934\u90e8\u7684\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u6839\u636e\u4f60\u7684\u7cfb\u7edf\u5206\u9875\u5927\u5c0f\u6765\u8bbe\u7f6e\uff0c\u4e00\u822c\u4e00\u4e2a\u8bf7\u6c42\u5934\u7684\u5927\u5c0f\u4e0d\u4f1a\u8d85\u8fc71k\uff0c\u4e0d\u8fc7\u7531\u4e8e\u4e00\u822c\u7cfb\u7edf\u5206\u9875\u90fd\u8981\u5927\u4e8e1k\uff0c\u6240\u4ee5\u8fd9\u91cc\u8bbe\u7f6e\u4e3a\u5206\u9875\u5927\u5c0f\u3002 \u5206\u9875\u5927\u5c0f\u53ef\u4ee5\u7528\u547d\u4ee4getconf PAGESIZE \u53d6\u5f97\u3002 [ root@web001 ~]# getconf PAGESIZE 4096 \u4f46\u4e5f\u6709client_header_buffer_size\u8d85\u8fc74k\u7684\u60c5\u51b5\uff0c\u4f46\u662fclient_header_buffer_size\u8be5\u503c\u5fc5\u987b\u8bbe\u7f6e\u4e3a\"\u7cfb\u7edf\u5206\u9875\u5927\u5c0f\"\u7684\u6574\u500d\u6570\u3002 open_file_cache max=65535 inactive=60s; \u8fd9\u4e2a\u5c06\u4e3a\u6253\u5f00\u6587\u4ef6\u6307\u5b9a\u7f13\u5b58\uff0c\u9ed8\u8ba4\u662f\u6ca1\u6709\u542f\u7528\u7684\uff0cmax \u6307\u5b9a\u7f13\u5b58\u6570\u91cf\uff0c\u5efa\u8bae\u548c\u6253\u5f00\u6587\u4ef6\u6570\u4e00\u81f4\uff0cinactive \u662f\u6307\u7ecf\u8fc7\u591a\u957f\u65f6\u95f4\u6587\u4ef6\u6ca1\u88ab\u8bf7\u6c42\u540e\u5220\u9664\u7f13\u5b58\u3002 open_file_cache_valid 80s; \u8fd9\u4e2a\u662f\u6307\u591a\u957f\u65f6\u95f4\u68c0\u67e5\u4e00\u6b21\u7f13\u5b58\u7684\u6709\u6548\u4fe1\u606f\u3002 open_file_cache_min_uses 1; open_file_cache \u6307\u4ee4\u4e2d\u7684inactive \u53c2\u6570\u65f6\u95f4\u5185\u6587\u4ef6\u7684\u6700\u5c11\u4f7f\u7528\u6b21\u6570\uff0c\u5982\u679c\u8d85\u8fc7\u8fd9\u4e2a\u6570\u5b57\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e00\u76f4\u662f\u5728\u7f13\u5b58\u4e2d\u6253\u5f00\u7684\uff0c\u5982\u4e0a\u4f8b\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u6587\u4ef6\u5728inactive \u65f6\u95f4\u5185\u4e00\u6b21\u6ca1\u88ab\u4f7f\u7528\uff0c\u5b83\u5c06\u88ab\u79fb\u9664\u3002 \u7b80\u5355\u914d\u7f6e\u6587\u4ef6 \u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684nginx \u914d\u7f6e\u6587\u4ef6: user www www; worker_processes 8; worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000; error_log /www/log/nginx_error.log crit; pid /usr/local/nginx/nginx.pid; worker_rlimit_nofile 204800; events { use epoll; worker_connections 204800; } http { include mime.types; default_type application/octet-stream; charset utf-8; server_names_hash_bucket_size 128; client_header_buffer_size 2k; large_client_header_buffers 4 4k; client_max_body_size 8m; sendfile on; tcp_nopush on; keepalive_timeout 60; fastcgi_cache_path /usr/local/nginx/fastcgi_cache levels=1:2 keys_zone=TEST:10m inactive=5m; fastcgi_connect_timeout 300; fastcgi_send_timeout 300; fastcgi_read_timeout 300; fastcgi_buffer_size 4k; fastcgi_buffers 8 4k; fastcgi_busy_buffers_size 8k; fastcgi_temp_file_write_size 8k; fastcgi_cache TEST; fastcgi_cache_valid 200 302 1h; fastcgi_cache_valid 301 1d; fastcgi_cache_valid any 1m; fastcgi_cache_min_uses 1; fastcgi_cache_use_stale error timeout invalid_header http_500; open_file_cache max=204800 inactive=20s; open_file_cache_min_uses 1; open_file_cache_valid 30s; tcp_nodelay on; gzip on; gzip_min_length 1k; gzip_buffers 4 16k; gzip_http_version 1.0; gzip_comp_level 2; gzip_types text/plain application/x-javascript text/css application/xml; gzip_vary on; server { listen 8080; server_name backup.aiju.com; index index.php index.htm; root /www/html/; location /status { stub_status on; } location ~ .*\\.(php|php5)?$ { fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; include fcgi.conf; } location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf|js|css)$ { expires 30d; } log_format access \u2018$remote_addr \u2014 $remote_user [$time_local] \"$request\" \u2018 \u2018$status $body_bytes_sent \"$http_referer\" \u2018 \u2018\"$http_user_agent\" $http_x_forwarded_for'; access_log /www/log/access.log access; } } \u5173\u4e8eFastCGI \u7684\u51e0\u4e2a\u6307\u4ee4\uff1a fastcgi_cache_path /usr/local/nginx/fastcgi_cache levels=1:2 keys_zone=TEST:10minactive=5m; \u8fd9\u4e2a\u6307\u4ee4\u4e3aFastCGI \u7f13\u5b58\u6307\u5b9a\u4e00\u4e2a\u8def\u5f84\uff0c\u76ee\u5f55\u7ed3\u6784\u7b49\u7ea7\uff0c\u5173\u952e\u5b57\u533a\u57df\u5b58\u50a8\u65f6\u95f4\u548c\u975e\u6d3b\u52a8\u5220\u9664\u65f6\u95f4\u3002 fastcgi_connect_timeout 300; \u6307\u5b9a\u8fde\u63a5\u5230\u540e\u7aefFastCGI \u7684\u8d85\u65f6\u65f6\u95f4\u3002 fastcgi_send_timeout 300; \u5411FastCGI \u4f20\u9001\u8bf7\u6c42\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u8fd9\u4e2a\u503c\u662f\u6307\u5df2\u7ecf\u5b8c\u6210\u4e24\u6b21\u63e1\u624b\u540e\u5411FastCGI \u4f20\u9001\u8bf7\u6c42\u7684\u8d85\u65f6\u65f6\u95f4\u3002 fastcgi_read_timeout 300; \u63a5\u6536FastCGI \u5e94\u7b54\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u8fd9\u4e2a\u503c\u662f\u6307\u5df2\u7ecf\u5b8c\u6210\u4e24\u6b21\u63e1\u624b\u540e\u63a5\u6536FastCGI \u5e94\u7b54\u7684\u8d85\u65f6\u65f6\u95f4\u3002 fastcgi_buffer_size 4k; \u6307\u5b9a\u8bfb\u53d6FastCGI \u5e94\u7b54\u7b2c\u4e00\u90e8\u5206\u9700\u8981\u7528\u591a\u5927\u7684\u7f13\u51b2\u533a\uff0c\u4e00\u822c\u7b2c\u4e00\u90e8\u5206\u5e94\u7b54\u4e0d\u4f1a\u8d85\u8fc71k\uff0c\u7531\u4e8e\u9875\u9762\u5927\u5c0f\u4e3a4k\uff0c\u6240\u4ee5\u8fd9\u91cc\u8bbe\u7f6e\u4e3a4k\u3002 fastcgi_buffers 8 4k; \u6307\u5b9a\u672c\u5730\u9700\u8981\u7528\u591a\u5c11\u548c\u591a\u5927\u7684\u7f13\u51b2\u533a\u6765\u7f13\u51b2FastCGI \u7684\u5e94\u7b54\u3002 fastcgi_busy_buffers_size 8k; \u8fd9\u4e2a\u6307\u4ee4\u6211\u4e5f\u4e0d\u77e5\u9053\u662f\u505a\u4ec0\u4e48\u7528\uff0c\u53ea\u77e5\u9053\u9ed8\u8ba4\u503c\u662ffastcgi_buffers \u7684\u4e24\u500d\u3002 fastcgi_temp_file_write_size 8k; \u5728\u5199\u5165fastcgi_temp_path \u65f6\u5c06\u7528\u591a\u5927\u7684\u6570\u636e\u5757\uff0c\u9ed8\u8ba4\u503c\u662ffastcgi_buffers \u7684\u4e24\u500d\u3002 fastcgi_cache TEST \u5f00\u542fFastCGI \u7f13\u5b58\u5e76\u4e14\u4e3a\u5176\u5236\u5b9a\u4e00\u4e2a\u540d\u79f0\u3002\u4e2a\u4eba\u611f\u89c9\u5f00\u542f\u7f13\u5b58\u975e\u5e38\u6709\u7528\uff0c\u53ef\u4ee5\u6709\u6548\u964d\u4f4eCPU \u8d1f\u8f7d\uff0c\u5e76\u4e14\u9632\u6b62502 \u9519\u8bef\u3002 fastcgi_cache_valid 200 302 1h; fastcgi_cache_valid 301 1d; fastcgi_cache_valid any 1m; \u4e3a\u6307\u5b9a\u7684\u5e94\u7b54\u4ee3\u7801\u6307\u5b9a\u7f13\u5b58\u65f6\u95f4\uff0c\u5982\u4e0a\u4f8b\u4e2d\u5c06200\uff0c302 \u5e94\u7b54\u7f13\u5b58\u4e00\u5c0f\u65f6\uff0c301 \u5e94\u7b54\u7f13\u5b581 \u5929\uff0c\u5176\u4ed6\u4e3a1 \u5206\u949f\u3002 fastcgi_cache_min_uses 1; \u7f13\u5b58\u5728fastcgi_cache_path \u6307\u4ee4inactive \u53c2\u6570\u503c\u65f6\u95f4\u5185\u7684\u6700\u5c11\u4f7f\u7528\u6b21\u6570\uff0c\u5982\u4e0a\u4f8b\uff0c\u5982\u679c\u57285 \u5206\u949f\u5185\u67d0\u6587\u4ef61 \u6b21\u4e5f\u6ca1\u6709\u88ab\u4f7f\u7528\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u5c06\u88ab\u79fb\u9664\u3002 fastcgi_cache_use_stale error timeout invalid_header http_500; \u4e0d\u77e5\u9053\u8fd9\u4e2a\u53c2\u6570\u7684\u4f5c\u7528\uff0c\u731c\u60f3\u5e94\u8be5\u662f\u8ba9nginx \u77e5\u9053\u54ea\u4e9b\u7c7b\u578b\u7684\u7f13\u5b58\u662f\u6ca1\u7528\u7684\u3002\u4ee5\u4e0a\u4e3anginx \u4e2dFastCGI \u76f8\u5173\u53c2\u6570\uff0c\u53e6\u5916\uff0cFastCGI \u81ea\u8eab\u4e5f\u6709\u4e00\u4e9b\u914d\u7f6e\u9700\u8981\u8fdb\u884c\u4f18\u5316\uff0c\u5982\u679c\u4f60\u4f7f\u7528php-fpm \u6765\u7ba1\u7406FastCGI\uff0c\u53ef\u4ee5\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u4ee5\u4e0b\u503c\uff1a 60 \u540c\u65f6\u5904\u7406\u7684\u5e76\u53d1\u8bf7\u6c42\u6570\uff0c\u5373\u5b83\u5c06\u5f00\u542f\u6700\u591a60 \u4e2a\u5b50\u7ebf\u7a0b\u6765\u5904\u7406\u5e76\u53d1\u8fde\u63a5\u3002 102400 \u6700\u591a\u6253\u5f00\u6587\u4ef6\u6570\u3002 204800 \u6bcf\u4e2a\u8fdb\u7a0b\u5728\u91cd\u7f6e\u4e4b\u524d\u80fd\u591f\u6267\u884c\u7684\u6700\u591a\u8bf7\u6c42\u6570\u3002 ulimit\u5173\u4e8e\u7cfb\u7edf\u8fde\u63a5\u6570\u7684\u4f18\u5316 linux \u9ed8\u8ba4\u503c open files \u548c max user processes \u4e3a 1024 #ulimit -n 1024 #ulimit \u2013u 1024 \u95ee\u9898\u63cf\u8ff0\uff1a \u8bf4\u660e server \u53ea\u5141\u8bb8\u540c\u65f6\u6253\u5f00 1024 \u4e2a\u6587\u4ef6\uff0c\u5904\u7406 1024 \u4e2a\u7528\u6237\u8fdb\u7a0b \u4f7f\u7528ulimit -a \u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u7684\u6240\u6709\u9650\u5236\u503c\uff0c\u4f7f\u7528ulimit -n \u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u7684\u6700\u5927\u6253\u5f00\u6587\u4ef6\u6570\u3002 \u65b0\u88c5\u7684linux \u9ed8\u8ba4\u53ea\u67091024 \uff0c\u5f53\u4f5c\u8d1f\u8f7d\u8f83\u5927\u7684\u670d\u52a1\u5668\u65f6\uff0c\u5f88\u5bb9\u6613\u9047\u5230error: too many open files \u3002\u56e0\u6b64\uff0c\u9700\u8981\u5c06\u5176\u6539\u5927\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a \u4f7f\u7528 ulimit \u2013n 65535 \u53ef\u5373\u65f6\u4fee\u6539\uff0c\u4f46\u91cd\u542f\u540e\u5c31\u65e0\u6548\u4e86\u3002\uff08\u6ce8ulimit -SHn 65535 \u7b49\u6548 ulimit -n 65535 \uff0c-S \u6307soft \uff0c-H \u6307hard) \u4fee\u6539\u65b9\u5f0f \u6709\u5982\u4e0b\u4e09\u79cd\u4fee\u6539\u65b9\u5f0f\uff1a \u5728/etc/rc.local \u4e2d\u589e\u52a0\u4e00\u884c ulimit -SHn 65535 \u5728/etc/profile \u4e2d\u589e\u52a0\u4e00\u884c ulimit -SHn 65535 \u5728/etc/security/limits.conf \u6700\u540e\u589e\u52a0: * soft nofile 65535 * hard nofile 65535 * soft nproc 65535 * hard nproc 65535 \u5177\u4f53\u4f7f\u7528\u54ea\u79cd\uff0c\u5728 CentOS \u4e2d\u4f7f\u7528\u7b2c1 \u79cd\u65b9\u5f0f\u65e0\u6548\u679c\uff0c\u4f7f\u7528\u7b2c3 \u79cd\u65b9\u5f0f\u6709\u6548\u679c\uff0c\u800c\u5728Debian \u4e2d\u4f7f\u7528\u7b2c2 \u79cd\u6709\u6548\u679c # ulimit -n 65535 # ulimit -u 65535 \u5907\u6ce8\uff1aulimit \u547d\u4ee4\u672c\u8eab\u5c31\u6709\u5206\u8f6f\u786c\u8bbe\u7f6e\uff0c\u52a0-H \u5c31\u662f\u786c\uff0c\u52a0-S \u5c31\u662f\u8f6f\u9ed8\u8ba4\u663e\u793a\u7684\u662f\u8f6f\u9650\u5236 soft \u9650\u5236\u6307\u7684\u662f\u5f53\u524d\u7cfb\u7edf\u751f\u6548\u7684\u8bbe\u7f6e\u503c\u3002 hard \u9650\u5236\u503c\u53ef\u4ee5\u88ab\u666e\u901a\u7528\u6237\u964d\u4f4e\u3002\u4f46\u662f\u4e0d\u80fd\u589e\u52a0\u3002 soft \u9650\u5236\u4e0d\u80fd\u8bbe\u7f6e\u7684\u6bd4 hard \u9650\u5236\u66f4\u9ad8\u3002 \u53ea\u6709 root \u7528\u6237\u624d\u80fd\u591f\u589e\u52a0 hard \u9650\u5236\u503c\u3002 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"\u9ad8\u6027\u80fd","loc":"http://opslinux.com/nginxda-zao-3wgao-bing-fa-wang-zhan.html","title":"Nginx\u6253\u90203w\u9ad8\u5e76\u53d1\u7f51\u7ad9"},{"text":"\u9700\u8981\u4f7f\u7528\u65b0\u7248\u672cPython\u7684\u76f8\u5173\u529f\u80fd\uff0c\u4f46\u662f\u53c8\u4e0d\u60f3\u8981\u5f71\u54cd\u5230\u7cfb\u7edf\u81ea\u5e26\u7684Python\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u5b9e\u73b0Python\u7684\u591a\u7248\u672c\u5171\u5b58\u3002 pyenv \u53ef\u4ee5\u5f88\u597d\u7684\u5b9e\u73b0Python\u7684\u591a\u7248\u672c\u5171\u5b58\u3002 \u5b89\u88c5pyenv 1 2 3 4 5 $ git clone git://github.com/yyuu/pyenv.git ~/.pyenv $ echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.bashrc $ echo 'export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.bashrc $ echo 'eval \"$(pyenv init -)\"' >> ~/.bashrc $ exec $SHELL -l \u5b89\u88c5Python \u67e5\u770b\u53ef\u5b89\u88c5\u7684\u7248\u672c 1 $ pyenv install --list \u5b89\u88c5\u6307\u5b9a\u7248\u672c \u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u5373\u53ef\u5b89\u88c5python 3.3.2. 1 $ pyenv install 3.3.2 \u8be5\u547d\u4ee4\u4f1a\u4ecegithub\u4e0a\u4e0b\u8f7dpython\u7684\u6e90\u4ee3\u7801\uff0c\u5e76\u89e3\u538b\u5230/tmp\u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u5728/tmp\u4e2d\u6267\u884c\u7f16\u8bd1\u5de5\u4f5c\u3002\u7f16\u8bd1\u8fc7\u7a0b\u4f9d\u8d56\u4e00\u4e9b\u5176\u4ed6\u7684\u5e93\u6587\u4ef6\uff0c\u82e5\u5e93\u6587\u4ef6\u4e0d\u80fd\u6ee1\u8db3\uff0c\u5219\u7f16\u8bd1\u9519\u8bef\uff0c\u9700\u8981\u91cd\u65b0\u4e0b\u8f7d\u3001\u7f16\u8bd1\u3002\u3002\u3002(\u4e3a\u4ec0\u4e48\u6bcf\u6b21\u90fd\u8981\u91cd\u65b0\u4e0b\u5462\uff1f) \u5df2\u77e5\u7684\u4e00\u4e9b\u9700\u8981\u9884\u5148\u5b89\u88c5\u7684\u5e93\u5305\u62ec\uff1a readline readline-devel readline-static openssl openssl-devel openssl-static sqlite-devel bzip2-devel bzip2-libs \u5728\u6240\u6709python\u4f9d\u8d56\u5e93\u90fd\u5b89\u88c5\u597d\u7684\u60c5\u51b5\u4e0b\uff0cpython\u7684\u5b89\u88c5\u5f88\u987a\u5229\u3002 \u66f4\u65b0\u6570\u636e\u5e93 \u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\u9700\u8981\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u66f4\u65b0\uff1a 1 $ pyenv rehash \u67e5\u770b\u5f53\u524d\u5df2\u5b89\u88c5\u7684python\u7248\u672c 1 2 3 $ pyenv versions * system ( set by /export/home/seisman/.pyenv/version ) 3.3.2 \u5176\u4e2d\u7684\u661f\u53f7\u8868\u793a\u4f7f\u7528\u7684\u662f\u7cfb\u7edf\u81ea\u5e26\u7684python\u3002 \u8bbe\u7f6e\u5168\u5c40\u7684python\u7248\u672c 1 2 3 4 $ pyenv global 3.3.2 $ pyenv versions system * 3.3.2 ( set by /export/home/seisman/.pyenv/version ) \u5f53\u524d\u5168\u5c40\u7684python\u7248\u672c\u5df2\u7ecf\u53d8\u6210\u4e863.3.2\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528 pyenv local \u6216 pyenv shell \u4e34\u65f6\u6539\u53d8python\u7248\u672c\u3002 \u786e\u8ba4python\u7248\u672c 1 2 3 4 5 $ python Python 3.3.2 ( default, Sep 30 2013, 20:11:44 ) [ GCC 4.4.7 20120313 ( Red Hat 4.4.7-3 )] on linux Type \"help\" , \"copyright\" , \"credits\" or \"license\" for more information. >>> \u4f7f\u7528python \u8f93\u5165 python \u5373\u53ef\u4f7f\u7528\u65b0\u7248\u672c\u7684python\uff1b \u7cfb\u7edf\u547d\u4ee4\u4f1a\u4ee5/usr/bin/python\u7684\u65b9\u5f0f\u76f4\u63a5\u8c03\u7528\u8001\u7248\u672c\u7684python\uff1b \u4f7f\u7528pip\u5b89\u88c5\u7b2c\u4e09\u65b9\u6a21\u5757\u65f6\u4f1a\u5b89\u88c5\u5230~/.pyenv/versions/3.3.2\u4e0b\uff0c\u4e0d\u4f1a\u548c\u7cfb\u7edf\u6a21\u5757\u53d1\u751f\u51b2\u7a81\u3002 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"Python","loc":"http://opslinux.com/python-pyenv.html","title":"Python\u591a\u7248\u672c\u5171\u5b58\u4e4bpyenv"},{"text":"\u4f7f\u7528Vagrant\u6253\u9020\u4f60\u7684\u865a\u62df\u73af\u5883 \u56e0\u4e3a\u8981\u505amongDB\u7684replication+sharding\u7684\u5b9e\u9a8c\uff0c\u9886\u5bfc\u7ed9\u6211\u63a8\u8350Vagrant\u6765\u6a21\u62df\u865a\u62df\u73af\u5883\u505a\u90e8\u7f72\u5b9e\u8df5\uff0c\u7a0d\u5fae\u4e86\u89e3\u591f\u5927\u4e3a\u9707\u60ca\uff0c\u56e0\u7f51\u4e0a\u6587\u6863\u4e0d\u662f\u7279\u522b\u5bb9\u6613\u7406\u89e3\uff0c\u7559\u4e0b\u4e00\u4efd\u4ee5\u5907\u540e\u7528 vagrant\u7684\u5f3a\u5927\u5728\u4e8e\u662f\u4e00\u4e2a\u955c\u50cf\uff0c\u914d\u7f6e\u5b8c\u4ee5\u540e\u955c\u50cf\u53ef\u4ee5\u653e\u5230\u4efb\u4f55\u5730\u65b9\u53bb\uff0c\u771f\u6b63\u505a\u5230\u4e86\u4e00\u52b3\u6c38\u9038\u4e86\u3002 \u603b\u7ed3\u4e00\u4e0b\u81ea\u5df1\u4f7f\u7528vagrant\u7684\u4e00\u70b9\u7b14\u8bb0\uff0c\u4ee5\u514d\u4ee5\u540e\u5fd8\u8bb0\u8fd8\u5f97\u518d\u53bb\u7ffb\u5b98\u65b9\u6587\u6863\u3002 vagrant\u7684\u5b98\u65b9\u7f51\u7ad9\uff1ahttp://www.vagrantup.com/ \u73b0\u5728\u53c8\u6539\u7248\u4e86\uff0c\u633a\u6f02\u4eae\u7684\u3002 vagrant\u7684\u4e00\u4e9b\u955c\u50cf\uff1ahttp://www.vagrantbox.es/ \u5404\u79cdlinux\u90fd\u6709\u3002 \u7136\u540e\u6309\u7167\u5b98\u65b9\u8bf4\u7684\uff0c\u6267\u884c\u8fd9\u4e09\u90e8\uff0c\u7136\u540e\u4e00\u4e2a\u865a\u62df\u673a\u5c31\u8d77\u6765\u4e86\u3002 \u6ce8\uff1a\u5148\u8981\u5b89\u88c5VirtualBox \u914d\u7f6ebox $ vagrant box add debian http://ergonlogic.com/files/boxes/debian-current.box #\u589e\u52a0\u4e00\u4e2abox,debian\u5c31\u662fbox\u7684title \u540e\u9762\u8ddfvagrant\u4e0a\u7684virtualbox\u955c\u50cf\u5730\u5740 $ vagrant init debian #\u521d\u59cb\u5316debian $ vagrant up #\u8fd9\u4e2a\u662f\u771f\u6b63\u7684\u542f\u52a8 \u6ce8\u610f\u56fd\u5185\u7f51\u901f\u8bbf\u95ee\u5f88\u6162 \u8fd9\u91cc\u53ef\u4ee5\u5148\u53bb http://www.vagrantbox.es/ \u4e0b\u8f7d\u4f60\u9700\u8981\u7684\u955c\u50cf \u7136\u540e\u628ahttp\u90a3\u884c\u76f4\u63a5\u6362\u6210\u4f60\u672c\u5730\u955c\u50cf\u7684\u8def\u5f84\u5c31ok\u6bd4\u8f83\u65b9\u4fbf\u548c\u5feb\u6377 \u8fde\u63a5\u865a\u62df\u4e3b\u673a \u4f60\u4f1a\u770b\u5230\u7ec8\u7aef\u663e\u793a\u4e86\u542f\u52a8\u8fc7\u7a0b\uff0c\u542f\u52a8\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528 SSH \u767b\u5f55\u865a\u62df\u673a\u4e86\uff0c\u5269\u4e0b\u7684\u6b65\u9aa4\u5c31\u662f\u5728\u865a\u62df\u673a\u91cc\u914d\u7f6e\u4f60\u8981\u8fd0\u884c\u7684\u5404\u79cd\u73af\u5883\u548c\u53c2\u6570\u4e86\u3002 $ vagrant ssh # SSH \u767b\u5f55 ssh\u7684\u540e\u9762\u53ef\u4ee5\u8ddf\u4f60\u7684title\u6765\u8fde\u63a5\u4e0d\u540c\u7684vm\u4e3b\u673a \u6253\u5305\u5206\u53d1 \u5f53\u4f60\u914d\u7f6e\u597d\u5f00\u53d1\u73af\u5883\u540e\uff0c\u9000\u51fa\u5e76\u5173\u95ed\u865a\u62df\u673a\u3002\u5728\u7ec8\u7aef\u91cc\u5bf9\u5f00\u53d1\u73af\u5883\u8fdb\u884c\u6253\u5305\uff1a $ vagrant package \u6253\u5305\u5b8c\u6210\u540e\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u751f\u6210\u4e00\u4e2a package.box \u7684\u6587\u4ef6\uff0c\u5c06\u8fd9\u4e2a\u6587\u4ef6\u4f20\u7ed9\u5176\u4ed6\u7528\u6237\uff0c\u5176\u4ed6\u7528\u6237\u53ea\u8981\u6dfb\u52a0\u8fd9\u4e2a box \u5e76\u7528\u5176\u521d\u59cb\u5316\u81ea\u5df1\u7684\u5f00\u53d1\u76ee\u5f55\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u4e00\u6a21\u4e00\u6837\u7684\u5f00\u53d1\u73af\u5883\u4e86\u3002 \u5e38\u7528\u547d\u4ee4 $ vagrant init # \u521d\u59cb\u5316 $ vagrant up # \u542f\u52a8\u865a\u62df\u673a $ vagrant halt # \u5173\u95ed\u865a\u62df\u673a $ vagrant reload # \u91cd\u542f\u865a\u62df\u673a $ vagrant ssh # SSH \u81f3\u865a\u62df\u673a $ vagrant status # \u67e5\u770b\u865a\u62df\u673a\u8fd0\u884c\u72b6\u6001 $ vagrant destroy # \u9500\u6bc1\u5f53\u524d\u865a\u62df\u673a box\u7ba1\u7406 $vagrant box list $vagrant box add $vagrant box remove \u66f4\u591a\u5185\u5bb9\u8bf7\u67e5\u9605\u5b98\u65b9\u6587\u6863 http://docs.vagrantup.com/ Multi-VM \u591a\u865a\u62df\u673a VAGRANTFILE_API_VERSION = \"2\" #\u5b9a\u4e49\u7248\u672c Vagrant.configure ( VAGRANTFILE_API_VERSION ) do |config| #\u4f7f\u7528\u5185\u90e82\u7248\u672c config.vm.define :debian1 do |debian1| #\u5b9a\u4e49\u7b2c\u4e00\u53f0\u865a\u62df\u673a\uff0c||\u91cc\u9762\u5c31\u7c7b\u4f3c\u4e00\u4e2a\u53d8\u91cf\u8bbe\u7f6e\u53c2\u6570\u65f6\u4f7f\u7528 debian1.vm.box = \"debian1\" #\u8bbe\u7f6ebox\u540d\u4e3adebian1 debian1.vm.host_name = \"debian1\" #\u8bbe\u7f6ehostname\u4e3adebian1 debian1.vm.network :private_network, ip: \"192.168.1.11\" #\u8bbe\u7f6e\u7f51\u7edc\u4e3a\u5185\u90e8\u7f51\u7edc ip\u4e3a192.168.1.11 end config.vm.define :debian2 do |debian2| debian2.vm.box = \"debian2\" debian2.vm.host_name = \"debian2\" debian2.vm.network :private_network, ip: \"192.168.1.12\" end config.vm.define :debian3 do |debian3| debian3.vm.box = \"debian3\" debian3.vm.host_name = \"debian3\" debian3.vm.network :private_network, ip: \"192.168.1.13\" end end \u6ce8\u610f\u8bed\u6cd5\u683c\u5f0f\u5c31\u597d\uff0c\u914d\u7f6e\u524d\u5173\u95ed\u865a\u62df\u673a\uff0c\u914d\u7f6e\u5b8c\u540e\u6253\u5f00\u865a\u62df\u673a\u3002 \u6ce8\u610f\u4e8b\u9879 \u4f7f\u7528 Apache/Nginx \u65f6\u4f1a\u51fa\u73b0\u8bf8\u5982\u56fe\u7247\u4fee\u6539\u540e\u4f46\u9875\u9762\u5237\u65b0\u4ecd\u7136\u662f\u65e7\u6587\u4ef6\u7684\u60c5\u51b5\uff0c\u662f\u7531\u4e8e\u9759\u6001\u6587\u4ef6\u7f13\u5b58\u9020\u6210\u7684\u3002\u9700\u8981\u5bf9\u865a\u62df\u673a\u91cc\u7684 Apache/Nginx \u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u4fee\u6539\uff1a Apache \u914d\u7f6e\u6dfb\u52a0: EnableSendfile off Nginx \u914d\u7f6e\u6dfb\u52a0: sendfile off; if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"\u865a\u62df\u673a","loc":"http://opslinux.com/shi-yong-vagrantda-zao-ni-de-xu-ni-huan-jing.html","title":"\u4f7f\u7528Vagrant\u6253\u9020\u4f60\u7684\u865a\u62df\u73af\u5883"},{"text":"zabbix\u76d1\u63a7mongoDB \u63a8\u8350\u6587\u6863\uff1a \u5b98\u65b9\u63a8\u8350\uff1ahttp://docs.mongodb.org/manual/administration/monitoring/ \u56e0\u6211\u4f7f\u7528\u7684\u662fzabbix.\u6240\u4ee5\u9009\u62e9\uff1a https://code.google.com/p/mikoomi/wiki/03 \u63d2\u4ef6\u4e0b\u8f7d\u5730\u5740\uff1a http://mikoomi.googlecode.com/svn/plugins/MongoDB%20Plugin/ \u5b66\u4e60\u5730\u5740\uff1a https://blog.serverdensity.com/mongodb-monitoring-db-serverstatus/ http://www.yaukb.com/2012/05/zabbix_mongodb/ 1.\u5728Zabbix Server\u4e0a\u5b89\u88c5php MongoDB\u9a71\u52a8\uff1a [root@localhost conf.d]# pecl install mongo WARNING: channel \"pecl.php.net\" has updated its protocols, use \"pecl channel-update pecl.php.net\" to update downloading mongo-1.4.3.tgz \u2026 Starting to download mongo-1.4.3.tgz (140,481 bytes) \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026done: 140,481 bytes 84 source files, building running: phpize Configuring for: PHP Api Version: 20100412 Zend Module Api No: 20100525 Zend Extension Api No: 220100525 \u2026\u2026 Build process completed successfully Installing \u2018/usr/lib64/php/modules/mongo.so' install ok: channel://pecl.php.net/mongo-1.4.3 configuration option \"php_ini\" is not set to php.ini location You should add \"extension=mongo.so\" to php.ini You have new mail in /var/spool/mail/root [root@localhost conf.d]# vim /etc/php.ini [root@localhost conf.d]# /etc/init.d/httpd reload [root@localhost conf.d]# php -m |grep mongo mongo 2.\u4e0b\u8f7d\uff1a [root@localhost externalscripts]# pwd /etc/zabbix/externalscripts [root@localhost externalscripts]# wget http://mikoomi.googlecode.com/svn/plugins/MongoDB%20Plugin/mikoomi-mongodb-plugin.php [root@localhost externalscripts]# wget http://mikoomi.googlecode.com/svn/plugins/MongoDB%20Plugin/mikoomi-mongodb-plugin.sh 3.\u5bfc\u5165\u6a21\u677f \u5efa\u7acb\u4e3b\u673a\uff1a \u5c06MongoDB_Plugin_template_export.xml\u5bfc\u5165\u5230zabbix\u4e2d \u4fee\u6539\"Miscellaneous: Data Collector\"\u76d1\u63a7\u9879\u7684key\u503c\uff0c\u56e0\u9ed8\u8ba4\u63d0\u4f9b\u7684\u503c\u6709\u9519\u8bef\uff1a mikoomi-mongodb-plugin.sh[\"--\", \"-h\", \"{$MONGODB_HOSTNAME}\", \"-p\", \"{$MONGODB_PORT}\", \"-z\", \"{$MONGODB_ZABBIX_NAME}\"] \u5728zabbix\u91cc\u5efa\u7acb\u4e3b\u673a\uff0c\u5b9a\u4e49\u5b8f\uff1a {$MONGODB_HOSTNAME} = 10.0.199.30 #\u5373ip\u5730\u5740 {$MONGODB_PORT} = 27017 #\u76d1\u63a7mongdb\u7684\u7aef\u53e3\u53f7 {$MONGODB_ZABBIX_NAME} =MongDB1 #hostname \u5c31\u662f\u4e3b\u673a\u540d \u4e0d\u8981\u5199\u663e\u793a\u540d \u8fd9\u6837\u4f1a\u63a5\u53d7\u4e0d\u5230\u6570\u636e \u4e00\u5b9a\u662fhostname \u7136\u540e\u7ed9\u4e3b\u673a\u8fde\u63a5\u4e0a\u6a21\u677f\u5373\u53ef\u3002 4.\u6d4b\u8bd5\uff1a [root@localhost externalscripts]# ./mikoomi-mongodb-plugin.sh -D -h10.0.199.30 -p27017 -z MongDB1 0 [root@localhost externalscripts]# less /tmp/mikoomi-mongodb-plugin.php_MongoDB1.log mikoomi-mongodb-plugin.php:Successfully connected to mongoDB using connect string root:passworda@MongDB1:27017 zabbix_sender [8413]: Warning: [line 66] \u2018Key value' required zabbix_sender [8413]: Warning: [line 68] \u2018Key value' required zabbix_sender [8414]: DEBUG: answer [{ \"response\" : \"success\" , \"info\" : \"Processed 58 Failed 13 Total 71 Seconds spent 0.001618\" }] sent: 71; skipped: 2; total: 73 /tmp/mikoomi-mongodb-plugin.php_MongDB1.log (END) \u82e5\u51fa\u73b0 Failed \u7684\u6570\u76ee\u548c Total\u6570\u76ee\u76f8\u7b49\u7684\u8bdd \u5e94\u8be5\u662f mikoomi-mongodb-plugin.sh \u540e\u9762-z\u53c2\u6570\u7684 hostname\u6ca1\u5199\u5bf9 \u8fd9\u4e2ahostname\u662fzabbix\u4e3b\u673a\u7684hostname\u5373\u4e3b\u673a\u540d \u800c\u4e0d\u662f\u663e\u793a\u540d if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"\u76d1\u63a7","loc":"http://opslinux.com/zabbixjian-kong-mongodb.html","title":"zabbix\u76d1\u63a7mongoDB"},{"text":"\u4f7f\u7528github\u548cpelican\u642d\u5efa\u672c\u7ad9\u535a\u5ba2 \u5b89\u88c5virtualenv\u865a\u62df\u73af\u5883 \u5b89\u88c5\u865a\u62df\u73af\u5883\u662f\u4e3a\u4e86\u9632\u6b62\u6c61\u67d3\uff0clinux\u672c\u8eab\u7684python\u73af\u5883 easy_install virtualenv \u4f7f\u7528virtualenv virtualenv pelican #\u521b\u5efa\u865a\u62df\u73af\u5883 cd pelican source bin/activate #\u6fc0\u6d3b\u865a\u62df\u73af\u5883 \u5b89\u88c5pelican\u548cmarkdown pelican \u5c31\u662f\u751f\u6210\u9759\u6001\u535a\u5ba2\u7684\u7a0b\u5e8f markdow \u662f\u5199\u535a\u5ba2\u4f7f\u7528\u7684\u8f7b\u91cf\u7ea7\u6807\u8bb0\u8bed\u8a00,\u4e0d\u4f1a\u4f7f\u7528\u7684\u540c\u5b66\u53ef\u4ee5\u67e5\u770b \u5e2e\u52a9 $ pip install pelican $ pip install Markdown $ pip install ghp - import \u5efa\u7acbblog\u76ee\u5f55 $ mkdir myblog $ cd myblog \u5f00\u59cb\u521b\u5efa $ pelican - quickstart \u57fa\u672c\u6309\u7167\u63d0\u793a\u8bbe\u7f6e\u5c31\u53ef\u4ee5\uff0c\u7a0d\u540e\u53ef\u4ee5\u5728pelicanconf.py\u6587\u4ef6\u4e2d\u624b\u52a8\u4fee\u6539\u3002 . |-- content #\u6240\u6709\u6587\u7ae0\u653e\u4e8e\u6b64\u76ee\u5f55 |-- develop_server.sh #\u7528\u4e8e\u5f00\u542f\u6d4b\u8bd5\u670d\u52a1\u5668 |-- Makefile #\u65b9\u4fbf\u7ba1\u7406\u535a\u5ba2\u7684Makefile |-- output #\u9759\u6001\u751f\u6210\u6587\u4ef6 |-- pelicanconf.py #\u914d\u7f6e\u6587\u4ef6 |-- publishconf.py #\u914d\u7f6e\u6587\u4ef6 \u5199\u4e00\u7bc7\u6587\u7ae0 \u5728 content \u76ee\u5f55\u65b0\u5efa\u4e00\u4e2a test.md \u6587\u4ef6, \u586b\u5165\u4e00\u4e0b\u5185\u5bb9: Title: \u6587\u7ae0\u6807\u9898 Date: 2013-04-18 Category: \u6587\u7ae0\u7c7b\u522b Tag: \u6807\u7b7e1, \u6807\u7b7e2 \u8fd9\u91cc\u662f\u5185\u5bb9 \u7136\u540e\u6267\u884c: make html \u7528\u4ee5\u751f\u6210html \u7136\u540e\u6267\u884c . / develop_server . sh start \u5f00\u542f\u4e00\u4e2a\u6d4b\u8bd5\u670d\u52a1\u5668, \u8fd9\u4f1a\u5728\u672c\u5730 8000 \u7aef\u53e3\u5efa\u7acb\u4e00\u4e2a\u6d4b\u8bd5web\u670d\u52a1\u5668, \u53ef\u4ee5\u4f7f\u7528\u6d4f\u89c8\u5668\u6253\u5f00: http://localhost:8000 \u6765\u8bbf\u95ee\u8fd9\u4e2a\u6d4b\u8bd5\u670d\u52a1\u5668, \u7136\u540e\u5c31\u53ef\u4ee5\u6b23\u8d4f\u5230\u4f60\u7684\u535a\u5ba2\u4e86 Github\u4e0a\u7684\u51c6\u5907 \u5728Github\u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u9879\u76ee\uff0c\u628a\u8fd9\u4e2a\u9879\u76eeclone\u5230myblog\u6587\u4ef6\u5939\u4e0b\u3002\u7136\u540e\u6309\u7167Github\u7684\u89c4\u5b9a\u5efa\u7acb\u4e00\u4e2a\u6ca1\u6709\u7236\u8282\u70b9\u7684\u5206\u652fgh-pages\u3002 \u6ce8\uff1a\u5728\u662f\u7528\u5206\u652f\u521b\u5efagithub\u7684blog\u7684\u65f6\u5019\uff0c\u8981\u5148\u786e\u4fdd\u81ea\u5df1\u7684github\u4e0a\u6709\u4f8b\u5982\uff1azbing3.github.io\u547d\u540d\u7684\u9879\u76ee\u5e76\u4e14\u5728 settings \u4e2d\u5f00\u542fGithub Pages \u5982\u56fe\uff1a \u70b9\u51fb Automatic Page Generator \u5f00\u542fGithub Pages\u670d\u52a1 \u8fdb\u5165output\u76ee\u5f55\u4e2d\uff1a $ git init $ git checkout --orphan gh-pages $ git add . $ git commit -m \"first post\" $ git remote add origin git@github.com:zbing3/opslinux.git $ git push origin gh-pages \u8fd9\u6837\u4e0a\u4f20\u5b8c\u4ee3\u7801\u7b4910\u5206\u949f\u5de6\u53f3\uff0c\u5373\u53ef\u5728\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528 http://zbing3.github.io/myblog \u5c31\u80fd\u8bbf\u95ee\u5230\u81ea\u5df1\u7684\u535a\u5ba2 \u5b9a\u5236\u81ea\u5df1\u7684Makefile\u6587\u4ef6\uff0c\u8ba9git\u63d0\u4ea4\u66f4\u65b9\u4fbf\u4e00\u70b9 \u4f7f\u7528\u6b64\u65b9\u6cd5\u5c31\u4e0d\u7528\u5728output\u76ee\u5f55\u4e2d\u521d\u59cbgit\u4e86\u3002\u7f16\u8f91Makefile vim Makefile \uff0c\u5728github\u4e0b\u9762\u6dfb\u52a0\u5982\u4e0b\u683c\u5f0f\u7684\u6587\u4ef6\uff1a git: $ ( PELICAN ) $ ( INPUTDIR ) - o $ ( OUTPUTDIR ) - s $ ( CONFFILE ) $ ( PELICANOPTS ) ghp - import $ ( OUTPUTDIR ) git push origin gh - pages ghp-import \u662f\u7528\u6765Easily import docs to your gh-pages branch\uff0c\u5c31\u662f\u65b9\u4fbf\u6dfb\u52a0\u5230gh-pages\u5206\u652f\u7684\uff0c\u8fd9\u4e2a\u5206\u652fgithub\u624d\u80fd\u89e3\u6790\u6211\u4eec\u7684html\u561b\u3002 \u63a5\u7740\u4ee5\u540e\uff1a make git \u5c31\u53ef\u4ee5\u76f4\u63a5\u63d0\u4ea4\u5230git\u7684gh-pages\u5206\u652f\u7684 pelican\u7684\u5907\u4efd \u56e0\u4e3a\u6709\u65f6\u5019\u8981\u6362\u7535\u8111\uff0c\u6240\u4ee5\u80af\u5b9a\u8981\u628a\u4f60\u7684pelican\u7684\u535a\u5ba2\u73af\u5883\u505a\u5907\u4efd\uff0c\u4ee5\u4fbf\u6362\u5b8c\u7535\u8111\u540e\u5feb\u901f\u7684\u642d\u5efa\u51fa\u5199\u535a\u5ba2\u7684\u73af\u5883 \u8fdb\u5165blog\u76ee\u5f55\uff1a $ git branch #\u67e5\u770b\u672c\u5730\u5206\u652f\uff0c\u6ca1\u6709master\u6240\u4ee5\u8981\u521b\u5efa \u5982\u679c\u6709master\u5c31\u8df3\u8fc7\u521b\u5efa gh-pages $ git branch master #\u521b\u5efamaster\u5206\u652f $ git checkout master #\u5207\u6362\u5230master\u5206\u652f $ git add . $ git commit -m \"first post\" $ git remote add origin git@github.com:zbing3/opslinux.git #\u6dfb\u52a0\u8fc7origin\u5c31\u4e0d\u7528\u6dfb\u52a0 $ git push origin master #\u6709\u4e8b\u63d0\u4ea4\u62a5\u9519\uff0c\u5982\u56e0\u539f\u6765\u63d0\u4ea4\u8fc7master\u5206\u652f\u8d77\u51b2\u7a81\uff0c\u5c31\u5728\u540e\u9762\u8ffd\u52a0--froce \u672a\u5b8c\u5f85\u7eed\u2026\u2026 if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) { var mathjaxscript = document.createElement('script'); mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#'; mathjaxscript.type = 'text/javascript'; mathjaxscript.src = 'https:' == document.location.protocol ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'; mathjaxscript[(window.opera ? \"innerHTML\" : \"text\")] = \"MathJax.Hub.Config({\" + \" config: ['MMLorHTML.js'],\" + \" TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } },\" + \" jax: ['input/TeX','input/MathML','output/HTML-CSS'],\" + \" extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js'],\" + \" displayAlign: 'center',\" + \" displayIndent: '0em',\" + \" showMathMenu: true,\" + \" tex2jax: { \" + \" inlineMath: [ ['$','$'] ], \" + \" displayMath: [ ['$$','$$'] ],\" + \" processEscapes: true,\" + \" preview: 'TeX',\" + \" }, \" + \" 'HTML-CSS': { \" + \" styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }\" + \" } \" + \"}); \"; (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript); }","tags":"pelican","loc":"http://opslinux.com/shi-yong-githubhe-pelicanda-jian-ben-zhan-bo-ke.html","title":"\u4f7f\u7528github\u548cpelican\u642d\u5efa\u672c\u7ad9\u535a\u5ba2"},{"text":"\u603b\u60f3\u627e\u4e2a\u5730\u65b9\u5199\u535a\u5ba2\uff0c\u5206\u4eab\u4e0b\u81ea\u5df1\u6240\u5b66\u7684\u4e1c\u897f\uff0c\u539f\u6765\u56e0\u4e3a\u79cd\u79cd\u539f\u56e0\u4e00\u76f4\u6ca1\u575a\u6301\u4e0b\u6765\uff0c\u8fd9\u6b21\u7528\u4e86github\u548cpelican\u642d\u5efa\u4e86\u4e2a\u9759\u6001\u535a\u5ba2\uff0c\u4f7f\u7528git\u4e0a\u4f20\u771f\u7684\u5f88\u723d\uff0c\u5c31\u662fmarkdown\u8fd9\u73a9\u5e94\u6211\u4e0d\u662f\u592a\u4f1a\u7528\uff0c\u8fd8\u7684\u6162\u6162\u5b66\u5b66\uff0c\u5927\u5bb6\u90fd\u8bf4\u4ed6\u597d\u7528\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u5230\u4e3a\u4ec0\u4e48\uff0c\u5b66\u7740\u770b\u5427\u4e0e\u5927\u5bb6\u5171\u52c9\uff0c\u5f00\u6e90\u4e16\u754c\u7684\u8f6f\u4ef6\uff0c\u603b\u80fd\u7ed9\u4eba\u4eec\u5e26\u6765\u7f8e\u597d\u7684\u4e1c\u897f\u3002","tags":"\u968f\u7b14","loc":"http://opslinux.com/helloworld.html","title":"helloworld"}]}